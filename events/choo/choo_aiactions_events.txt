namespace = choo_ai_actions_performing

#this file contains actions that ai couldnt handle at all, for now only the trade posts mechanic

choo_ai_actions_performing.1 = {
	type = country_event
	hidden = yes
	
	trigger = {
		is_ai = yes
		can_pay_price = rise_trade_post
		government = merchant_republic
		current_number_of_owned_trade_posts <= number_of_possible_trade_posts_to_own
		OR = {
			any_country = {  
				opinion = { target = root value >= 60 }
				any_owned_province = {
					ai_area_value_check > 175
				}
			}
			any_owned_province = {
				ai_area_value_check > 100	
			}
		}
	}
	immediate = {  
		if = { 
			limit = { has_variable = list_of_potential_choices_for_trade_posts }  
		}
		else = {  
			set_variable = { name = list_of_potential_choices_for_trade_posts }
		}
		clear_variable_list = ai_evaluation_of_trade_post_choice	
		every_owned_province = {
			limit = {
				ai_area_value_check > 100
			}
			save_temporary_scope_as = to_add_own
			root = {
				add_to_variable_list = {
					name = list_of_potential_choices_for_trade_posts
					target = scope:to_add_own
				}
			}
		}
			
		every_country = {
			limit = {
				NOT = { this = root }
				opinion = { target = root value >= 60 } 
			}
			every_owned_province = {
				limit = {
					ai_area_value_check > 175
				}
				save_temporary_scope_as = to_add_foregin
				root = {
					add_to_variable_list = {
						name = list_of_potential_choices_for_trade_posts
						target = scope:to_add_foregin
					}
				}				
			}
		}
	
	}
	
	option = {
		ordered_in_list = { 
			variable = list_of_potential_choices_for_trade_posts	
			limit = {
				region = { current_number_of_regional_trade_posts <= number_of_possible_trade_posts_in_region }
				any_area_province = { NOT = { has_variable = trade_post_constructed  } }				
				OR = {
					AND = {
						is_coastal = yes
						NOT = {
							terrain = mountain
							terrain = glacier
							terrain = marsh
						}
					}
					is_state_capital = yes
				}
			}					
			order_by = ai_area_value_check				
			position = 0
			save_temporary_scope_as = ai_best_possible_choice
		}			   
		if = {
			limit = { exists = scope:ai_best_possible_choice  }
				scope:ai_best_possible_choice = {
				set_variable = { name = trade_post_constructed value = root }
				root = { pay_price = rise_trade_post  }
				show_as_tooltip = {
					root = {
					add_treasury = 25
					}
				}
			}
		}
	
		ai_chance = {
			base = 1			
			modifier = {
				factor = 0
				NOT = { can_pay_price = rise_trade_post }
			}
			
			modifier = {
				factor = 9
				current_number_of_owned_trade_posts < 1
			}				
		}
	
	}
	option = {
		ai_chance = {
			base = 1
		}
	}		
}
