###parliment###
show_feudal_panel = {  
	
	scope = country
	
    is_shown = { 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
    }
	ai_is_valid = {
	always = yes
	}
	ai_chance = {
		base = 1
		modifier = { factor = 10 any_advisor_place_free = yes }
		modifier = { factor = 2 war = yes NOT = { has_country_modifier = risen_war_founds } }
	}
	is_valid = {
    always = yes
    }
	effect = { 
	
	if = { limit = { has_variable = feudal_panel_on } remove_variable = feudal_panel_on } 
	else = { set_variable = feudal_panel_on }
	
	}
}
feudal_panel_is_shown = {
   
   scope = country
   
   is_shown = { 
	has_variable = feudal_panel_on
    }
	is_valid = {
    always = yes
    }

	effect = { 
	}
}
close_feudal_panel = {

	scope = country
	ai_is_valid = {
	any_advisor_place_free = no
	}
	ai_chance = {
		base = 10
	}
    is_shown = { 
	always = yes
    }
	is_valid = {
    always = yes
    }

	effect = { 
		remove_variable = feudal_panel_on
	}
}

#feudal monarchy mechanics
#domen size mechanics
show_domene_size_information = {  
	 scope = country
	
	
	is_shown = { 
	government = feudal_monarchy
	
	}

   
    effect = {
        custom_tooltip = "SHOW_DOMENE_SIZE_INFORMATION"
    }

}
show_domene_size_information_in_topbar = {  
	 scope = country
	
	
	is_shown = { 
	government = feudal_monarchy
	
	}

   
    effect = {
        custom_tooltip = "SHOW_DOMENE_SIZE_INFORMATION_IN_TOPBAR"
    }

}
#increase rank










#chose list
#choose_province_to_be_granted = {  
#	scope = province
#	is_shown = { 
#	is_capital = no
#	owner = { 
#	government = feudal_monarchy
#	} 
#	}
#	
#	is_valid = {
#	
#	owner = { war = no }   
#	
#	
#    }
#
#	effect = {
#	
#	if = { limit = { any_province = { NOT = { is_in_area = root }  has_variable = province_to_be_given } }
#	every_owned_province = { limit = { NOT = { is_in_area = root } } remove_variable = province_to_be_given } 
#	
#	if = { limit = { has_variable = province_to_be_given  } remove_variable = province_to_be_given }
#	else = { set_variable = province_to_be_given }
#	 
#	
#	}
#	else = { 
#	
#	if = { limit = { has_variable = province_to_be_given  } remove_variable = province_to_be_given }
#	else = { set_variable = province_to_be_given }
#	
#	}
#	
#	
#	
#	
#	}
#
#
#}





open_chancellor_characters_list = {
scope = country
	is_shown = { 
	always = yes	
	}
	
	ai_is_valid = {

	scope:player = {
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	trigger_if = { 
	limit = { has_variable = middle_seat_controler  } 
	var:middle_seat_controler.loyalty < 50
	}
	trigger_else = { 
	always = yes
	}
	}
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	always = yes
	
	
    }

effect = {

	clear_variable_list = chancellor_candidates_list


		every_character = {
			limit = {
			OR = {
			has_tech_office = yes
			has_any_office = yes
			AND = { is_head_of_family = yes charisma >= 6  }
			}

			is_ruler = no
			is_primary_heir = no
				
			}
			save_temporary_scope_as = to_add
			root = {
				add_to_variable_list = {
					name = chancellor_candidates_list
					target = scope:to_add
				}
			}
		}
	

	
	if = { limit = { has_variable = opened_chancellor_list } remove_variable = opened_chancellor_list }
	else = { set_variable = opened_chancellor_list }

}

}

chancellor_list_is_shown = {
scope = country
	is_shown = { 
	has_variable = opened_chancellor_list
	}


	is_valid = {
	always = yes
    }

effect = {

}


}
show_chancellor_informations = {  
	 scope = country
	
	
	is_shown = { 
	has_variable = middle_seat_controler
	}

   
    effect = {
        custom_tooltip = "SHOW_CHANCELLOR_INFORMATION"
    }

}
#chose as a marshal
grant_chancellor_title = {
scope = character
saved_scopes = {

player

}

	ai_is_valid = {
	scope:player = {  is_target_in_variable_list = { name = chancellor_candidates_list target = ROOT } }
	scope:player = {
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	trigger_if = { 
	limit = { has_variable = middle_seat_controler  } 
	var:middle_seat_controler.loyalty < 50
	root.loyalty > 50
	}
	trigger_else = { 
	root.loyalty > 50
	}


	
	}
	}
		ai_chance = {
		base = 5
		  
	}
	
	is_shown = { 
	always = yes	
	}


	is_valid = {
	

	NOR = {
	trigger_if = {
	limit = { scope:player = { has_variable = left_seat_controler } }
	scope:player = { root = var:left_seat_controler    } 
	}
	trigger_if = {
	limit = { scope:player = { has_variable = right_seat_controler } }
	 scope:player = { root = var:right_seat_controler   } 
	}
	trigger_if = {
	limit = { scope:player = { has_variable = middle_seat_controler } }
	 scope:player = { root = var:middle_seat_controler   } 
	}
	}
	trigger_if = {
	limit = {  scope:player = { NOT = { has_variable = middle_seat_controler has_variable = right_seat_controler  has_variable = left_seat_controler } } }
	always = yes
	}
	
	
	
    }

	effect = { 
	
	scope:player = { every_character = { remove_variable = middle_seat_controler } set_variable = { name = middle_seat_controler value = root } }
	set_advisor_attitude = yes
	}
	
}



open_religioushead_characters_list = {
scope = country
	is_shown = { 
	always = yes	
	}


	ai_is_valid = {
	
	scope:player = { 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	trigger_if = { 
	limit = { has_variable = left_seat_controler  } 
	var:left_seat_controler.loyalty < 50
	}
	trigger_else = { 
	always = yes
	}
	}
	}
		ai_chance = {
		base = 5
	}

effect = {

	clear_variable_list = religioushead_candidates_list

	#every general
		every_character = {
			limit = {
			
			is_head_of_family = yes
			zeal >= 6
			
			is_ruler = no
			is_primary_heir = no
				
			}
			save_temporary_scope_as = to_add
			root = {
				add_to_variable_list = {
					name = religioushead_candidates_list
					target = scope:to_add
				}
			}
		}
	

	
	if = { limit = { has_variable = opened_religioushead_list } remove_variable = opened_religioushead_list }
	else = { set_variable = opened_religioushead_list }

}

}
religioushead_list_is_shown = {
scope = country
	is_shown = { 
	has_variable = opened_religioushead_list
	}


	is_valid = {
	always = yes
    }

effect = {

}


}

show_religioushead_informations = {  
	 scope = country
	
	
	is_shown = { 
	has_variable = left_seat_controler
	}

   
    effect = {
        custom_tooltip = "SHOW_RELIGIOUSHEAD_INFORMATION"
    }

}
#chose as a marshal
grant_religioushead_title = {
scope = character
saved_scopes = {

player

}
	is_shown = { 
	always = yes	
	}
	
	
	ai_is_valid = {
	scope:player = {  is_target_in_variable_list = { name = religioushead_candidates_list target = ROOT } }
	scope:player = {
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	trigger_if = { 
	limit = { has_variable = middle_seat_controler  } 
	var:middle_seat_controler.loyalty < 50
	root.loyalty > 50
	}
	trigger_else = { 
	root.loyalty > 50
	}


	
	}
	}
	ai_chance = {
		base = 5
	}

	is_valid = {
	
	NOR = {
	trigger_if = {
	limit = { scope:player = { has_variable = left_seat_controler } }
	scope:player = { var:left_seat_controler = root  } 
	}
	trigger_if = {
	limit = { scope:player = { has_variable = right_seat_controler } }
	 scope:player = { var:right_seat_controler = root  } 
	}
	trigger_if = {
	limit = { scope:player = { has_variable = middle_seat_controler } }
	 scope:player = { var:middle_seat_controler = root  } 
	}
	}
	trigger_if = {
	limit = {  scope:player = { NOT = { has_variable = middle_seat_controler has_variable = right_seat_controler  has_variable = left_seat_controler } } }
	always = yes
	}
	
	
    }

	effect = { 
	
	scope:player = { every_character = { remove_variable = left_seat_controler } set_variable = { name = left_seat_controler value = root } }

	set_advisor_attitude = yes
	
	}
	
}


open_marshal_characters_list = {
scope = country
	is_shown = { 
	always = yes	
	}


	is_valid = {
	
	always = yes
	
	
    }

	ai_is_valid = {
	scope:player = {
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	trigger_if = { 
	limit = { has_variable = middle_seat_controler  } 
	var:middle_seat_controler.loyalty < 50

	}
	trigger_else = { 
	always = yes
	}


	
	}
	}
	ai_chance = {
		base = 5
	}
effect = {

	clear_variable_list = marshal_candidates_list

	#every general
		every_character = {
			limit = {
			OR = { 
			is_general = yes
			AND = { is_head_of_family = yes martial >= 5 }
			}
			is_ruler = no
			is_primary_heir = no
			}
			save_temporary_scope_as = to_add
			root = {
				add_to_variable_list = {
					name = marshal_candidates_list
					target = scope:to_add
				}
			}
		}


	
	if = { limit = { has_variable = opened_marshal_list } remove_variable = opened_marshal_list }
	else = { set_variable = opened_marshal_list }

}

}
marshal_list_is_shown = {
scope = country
	is_shown = { 
	has_variable = opened_marshal_list
	}


	is_valid = {
	always = yes
    }

effect = {

}


}
show_marshal_informations = {  
	 scope = country
	
	
	is_shown = { 
	has_variable = right_seat_controler
	}

   
    effect = {
        custom_tooltip = "SHOW_MARSHALL_INFORMATION"
    }

}
#chose as a marshal
grant_marshal_title = {
scope = character
saved_scopes = {
	player
}
	is_shown = { 
	always = yes	
	}
	
	ai_is_valid = {
	scope:player = { is_target_in_variable_list = { name = marshal_candidates_list target = ROOT } }
	scope:player = {
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	trigger_if = { 
	limit = { has_variable = middle_seat_controler  } 
	var:middle_seat_controler.loyalty < 50
	root.loyalty > 50
	}
	trigger_else = { 
	root.loyalty > 50
	}

	}

	}
	ai_chance = {
		base = 5
	}

	is_valid = {
	
	NOR = {
	trigger_if = {
	limit = { scope:player = { has_variable = left_seat_controler } }
	scope:player = { var:left_seat_controler = root  } 
	}
	trigger_if = {
	limit = { scope:player = { has_variable = right_seat_controler } }
	 scope:player = { var:right_seat_controler = root  } 
	}
	trigger_if = {
	limit = { scope:player = { has_variable = middle_seat_controler } }
	 scope:player = { var:middle_seat_controler = root  } 
	}
	}
	trigger_if = {
	limit = {  scope:player = { NOT = { has_variable = middle_seat_controler has_variable = right_seat_controler  has_variable = left_seat_controler } } }
	always = yes
	}

    }

	effect = { 
	
	scope:player = { every_character = { remove_variable = right_seat_controler } set_variable = { name = right_seat_controler value = root } }
	set_advisor_attitude = yes
	
	
	}
	
}



#speciall actions
#rise knights
rise_knights_button = {

	scope = country

	is_shown = { 
	is_monarchy = yes
	
	}
	
	ai_is_valid = {
	has_monthly_balance >= 2
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	capital_scope = { controller = root }
	any_owned_province = { num_of_tnoble >= 1 }   
	NOT = { has_country_modifier = risen_knights_levy }
	
    }

	effect = {
	
	capital_scope = { 
	save_temporary_scope_as = leavy_rally_point
	}

	create_unit = {
	sub_unit = knights
	location = scope:leavy_rally_point
	
		while = {
		count = root.avivable_knights_leavy
		add_subunit = knights
		
		}
	
	}


	

	
	add_country_modifier = { name = risen_knights_levy duration = 1825 }
	}





}
grant_nobiliations_special_action = {

scope = country
	is_shown = { 
	always = yes
	}
	ai_is_valid = { 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes 
	}
	ai_chance = { base = 5 }
	is_valid = {
	
	any_owned_province = { num_of_citizen > 5 }   
	NOT = { has_country_modifier = granted_nobilitation }
	
    }
	effect = {

	random_owned_province = {
	limit = { NOT = { has_province_modifier = recently_nobilitized } num_of_citizen > 5 }
	random_pops_in_province = { limit = { pop_type = citizen } set_pop_type = tnoble }
	random_pops_in_province = { limit = { pop_type = citizen } set_pop_type = tnoble }
	add_province_modifier = { name = recently_nobilitized duration = 1825 }
	}
	add_country_modifier = { name = granted_nobilitation duration = 1825 }


	}





}

search_for_talented_nobleman = {
scope = country
	is_shown = { 
	always = yes
	}
	
	ai_is_valid = { 
	
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes 
	
	any_character = { percent = 0.8 martial <= 6 }
	
	
	}
	ai_chance = { base = 5 }
	
	is_valid = {
	
	NOT = { has_country_modifier = found_talented_nobleman }
	
    }
	effect = {

	
	add_country_modifier = { name = found_talented_nobleman duration = 1825 }

	trigger_event = { id = parliment_events.10 days = 2  }
	
	
	}




}



rise_war_founds_bttn = {

scope = country
	ai_is_valid = { 
	war = yes 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	}
	ai_chance = {
		base = 5
		modifier = {
		factor = 0 
		treasury >= 0
		}
		modifier = {
		factor = 2
		treasury < gold_from_rise_founds
		}
	}
	is_shown = { 
	always = yes
	}
	
	is_valid = {
	
	any_owned_province = { num_of_tnoble >= 1 }   
	NOT = { has_country_modifier = risen_war_founds }
	
    }
	effect = {
	
	add_treasury = gold_from_rise_founds
	
	add_country_modifier = { name = risen_war_founds duration = 1825 }
	

	
	}


}






increase_monarchy_rank = {
scope = country
	is_shown = { 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	}
	ai_is_valid = { 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes 
	}
	ai_chance = {
		base = 25
	}
	is_valid = {
	var:current_state_rank < 5
	has_variable = current_state_rank
	
	trigger_if = { 
	limit = { var:current_state_rank < 2 } #barony
	num_of_cities >= 2 
	}
	trigger_else_if = {
	limit = { var:current_state_rank >= 2 var:current_state_rank < 3 } #princedom
	OR = {
	num_of_provinces >= 2
	num_of_cities >= 7
	}
	}
	trigger_else_if = {
	limit = { var:current_state_rank >= 3 var:current_state_rank < 4 } #kingdom
	num_of_provinces >= 4
	
	
	}
	trigger_else_if = {
	limit = { var:current_state_rank >= 4 var:current_state_rank < 5 } #empire
	num_of_provinces >= 10
	
	
	}
    
	}
	effect = {
	
	change_variable = { name = current_state_rank add = 1 }
	

	}


}

royal_guardian_portrait_is_shown = {   
scope = country
	is_shown = {
	#var:current_state_rank >= 4
	always = no
	}
	
	is_valid = {
	always = yes
    }
	effect = {
	

	
	}

}

open_royal_guardian_characters_list = {
scope = country

	is_shown = { 
	#var:current_state_rank >= 4
	always = no
	}


	is_valid = {
	
	any_character = { is_general = yes }
	
    }

effect = {

	clear_variable_list = royal_guardian_candidates_list

	#every general
		every_character = {
			limit = {
			is_general = yes
			is_ruler = no
			is_primary_heir = no
			}
			save_temporary_scope_as = to_add
			root = {
				add_to_variable_list = {
					name = royal_guardian_candidates_list
					target = scope:to_add
				}
			}
		}
	

	
	if = { limit = { has_variable = opened_royal_guardian_list } remove_variable = opened_royal_guardian_list }
	else = { set_variable = opened_royal_guardian_list }

}

}
royal_guardian_list_is_shown = {
scope = country
	is_shown = { 
	has_variable = opened_royal_guardian_list
	}


	is_valid = {
	always = yes
    }

effect = {

}


}
#chose as a marshal
grant_royal_guardian_title = {
scope = character
saved_scopes = {

player

}
	is_shown = { 
	always = no	
	}


	is_valid = {
	always = no
	trigger_if = {
	limit = { scope:player = { has_variable = royal_guardian  }  }
	NOT = { 
	scope:player = { var:royal_guardian = root  }
	}
	
	}

		
		
    }

	effect = { 
	
	scope:player = { 
	every_character = { remove_variable = royal_guardian } set_variable = { name = royal_guardian value = root } 
	
	
	every_unit = {
	every_sub_unit = {
	limit = { sub_unit_type = royal_guards }
	destroy_subunit = yes
	}
	}
	
	random_unit = { 
	
	limit = { scope:player = { trigger_if = { limit = { has_variable = royal_guardian } var:royal_guardian = prev.commander } } } 
	
	add_loyal_subunit = royal_guards 
	
	
	} 
	
	
	}
	
	
	}

	
	
}
	

show_additional_kingodm_information = {

	 scope = country
	
	
	is_shown = { 
	always = yes
	
	}


   
    effect = {
	
        custom_tooltip = "SHOW_KINGDOM_ADDITIONAL_INFORMATION"
    }


}





revoke_nobility_privilegia_bttn = {

scope = country

	is_shown = { 
	is_monarchy = yes
	is_exluded_from_standard_monarchies = yes
	}
	
	is_valid = {
	
	any_owned_province = { num_of_citizen > 5 }   
	NOT = { has_country_modifier = revoken_nobility_privilegia }
	
    }
	effect = {

	add_country_modifier = { name = revoken_nobility_privilegia duration = 1825 }
	add_tyranny = 2.5

	
	}







}







####imperial councill####
show_imperial_panel = {  
	
	scope = country
	
    is_shown = { 
	is_monarchy = yes
	has_variable = current_state_rank
	var:current_state_rank > 4
    }
	ai_is_valid = {
	is_monarchy = yes
	has_variable = current_state_rank
	var:current_state_rank > 4
	is_exluded_from_standard_monarchies = yes
	}
	ai_chance = {
		base = 1
		modifier = { factor = 10 any_character = { has_any_governor_request = yes } }
	}
	is_valid = {
    always = yes
    }
	effect = { 
	
	if = { limit = { has_variable = imperial_panel_on } remove_variable = imperial_panel_on } 
	else = { set_variable = imperial_panel_on }
	
	}
}
imperial_panel_is_shown = {
   
   scope = country
   
   is_shown = { 
	has_variable = imperial_panel_on
    }
	is_valid = {
    always = yes
    }

	effect = { 
	}
}
close_imperial_panel = {

	scope = country
	ai_is_valid = {
	
	}
	ai_chance = {
		base = 10
	}
    is_shown = { 
	always = yes
    }
	is_valid = {
    always = yes
    }

	effect = { 
		remove_variable = imperial_panel_on
	}
}



accept_governor_submission = {
scope = character
saved_scopes = {

player

}
	is_shown = { 
	always = yes	
	}
	
	
	ai_is_valid = {
	
	has_any_governor_request = yes
	
	scope:player = { 
	is_target_in_variable_list = { name = governors_submissions_list_submissions target = root } 
	is_exluded_from_standard_monarchies = yes
	}
	

	
	}
	ai_chance = {
		base = 50
		modifier = { factor = 0.9 scope:player = { calc_importance_against_request > calc_importance_greatly_for_request } }
		modifier = { factor = 0.0 scope:player = { calc_importance_against_request > calc_importance_for_request  } }
		modifier = { factor = 4.0 scope:player = { calc_importance_greatly_against_request < calc_importance_for_request  } }
	}

	is_valid = {
	
	always = yes
	
    }

	effect = { 
	
	scope:player = { 
	
	add_to_variable_list = { name = accepted_submissions_list target = root }
	remove_list_variable = { name = governors_submissions_list_submissions target = root }
	
	
	accept_governor_submission_effect = yes
	
	
	}
	clear_all_submissions = yes
	
	
	
	}
	
}

deny_governor_submission = {
scope = character
saved_scopes = {

player

}
	is_shown = { 
	always = yes	
	}
	
	
	ai_is_valid = {
	has_any_governor_request = yes
	
	scope:player = { 
	is_target_in_variable_list = { name = governors_submissions_list_submissions target = root } 
	is_exluded_from_standard_monarchies = yes
	}
	
	
	
	}
	
	ai_chance = {
		base = 50
		modifier = { factor = 0.9 scope:player = { calc_importance_against_request < calc_importance_greatly_for_request } }
		modifier = { factor = 0.0 scope:player = { calc_importance_against_request < calc_importance_for_request  } }
		modifier = { factor = 4.0 scope:player = { calc_importance_greatly_for_request < calc_importance_against_request  } }
	}

	is_valid = {
	
	
    }

	effect = { 
	
	scope:player = { 
	
	add_to_variable_list = { name = denied_submissions_list target = root }
	remove_list_variable = { name = governors_submissions_list_submissions target = root }
	
	denied_governor_submission_effect = yes
	
	
	
	
	}
	clear_all_submissions = yes
	
	}
	
}

submission_text_display = {  
	 scope = character
	
	
	is_shown = { 
	always = yes
	}

   
    effect = {
        custom_tooltip = "SHOW_SUBMISSION_FLAVOR_TEXT"
    }

}

##################
##rage mechanics##
##################

rage_mechanic_is_active = {
	scope = country
	ai_is_valid = {
	always = no
	}
    is_shown = { 
	OR = {
	government = berserkers_tribe
	has_variable = wrath_might
	}
    }
	is_valid = {
    always = yes
    }
	effect = { 
	}
}


rage_dangerous_level_1 = {
	scope = country
	ai_is_valid = {
	always = no
	}
    is_shown = { 

	has_variable = rage_points_level
	var:rage_points_level >= 25
	var:rage_points_level <= 50
	
    }
	is_valid = {
    always = yes
    }
	
	effect = { 
	}
}
rage_dangerous_level_2 = {
	scope = country
	ai_is_valid = {
	always = no
	}
    is_shown = { 

	has_variable = rage_points_level
	var:rage_points_level > 50
	
    }
	is_valid = {
    always = yes
    }
	
	effect = { 
	}
}
#####################
##tribal mechanics##
#####################
show_nomadic_panel = {  
	
	scope = country
	
    is_shown = { 
	is_tribal = yes
    }
	ai_is_valid = {
	always = yes
	}
	ai_chance = {
		base = 1
		modifier = { factor = 10 }
	}
	is_valid = {
    always = yes
    }
	effect = { 
	
	if = { limit = { has_variable = nomadic_panel_on } remove_variable = nomadic_panel_on } 
	else = { set_variable = nomadic_panel_on }
	
	}
}
nomadic_panel_is_shown = {
   
   scope = country
   
   is_shown = { 
	has_variable = nomadic_panel_on
    }
	is_valid = {
    always = yes
    }

	effect = { 
	}
}
close_nomadic_panel = {

	scope = country
	ai_is_valid = {
	always = yes
	}
	ai_chance = {
		base = 10
	}
    is_shown = { 
	always = yes
    }
	is_valid = {
    always = yes
    }

	effect = { 
		remove_variable = nomadic_panel_on
	}
}

open_close_chieftan_candidates_list = {

	scope = country
	ai_is_valid = {
	always = yes
	}
	ai_chance = {
	base = 10
	}
    is_shown = { 
	always = yes
    }
	is_valid = {
    always = yes
    }

	effect = { 
		if = { limit = { has_variable = chieftan_list_on } remove_variable = chieftan_list_on } 
		else = { set_variable = chieftan_list_on }
		generate_chieftan_candidates_list = yes
	}
}

chieftan_candidates_list_is_shown = {
   
   scope = country
   
   is_shown = { 
	has_variable = chieftan_list_on
    }
	is_valid = {
    always = yes
    }

	effect = { 
	}
}




grant_chieftan_title = {

  scope = character
	saved_scopes = {

	player

	}
	
	is_shown = { 
    always = yes
	}
	

	
	is_valid = {
	scope:player = { is_tribal = yes number_of_elders_for_inside_of_list < maximal_number_of_elders }
	
    }

	ai_is_valid = {
	
	scope:player = { number_of_elders_for_inside_of_list < maximal_number_of_elders }
	scope:player = { is_target_in_variable_list = { name = nomination_for_chieftan_list target = ROOT } }
	}
	
	ai_chance = {
	base = 5
	modifier = { factor = 2 loyalty > 85 }
	
	}
	
	effect = { 
	
	scope:player = {
	
	add_to_variable_list = { name = current_chieftans_list target = root }
	remove_list_variable = { name = nomination_for_chieftan_list target = root }
	
	set_proper_numof_chieftans = yes
	
	root = { add_loyalty = chieftan_title_grant }
	
	}
	
	
	}

}
remove_chieftan_title = {

  scope = character
	saved_scopes = {

	player

	}
	
	is_shown = { 
    always = yes
	}
	is_valid = {
    always = yes
    }

	ai_is_valid = {
	always = yes
	
	}
	
	ai_chance = {
	base = 2
	modifier = { factor = 0 loyalty > 50 }
	modifier = { factor = 0 loyalty > 40 power_base > 40 }
	modifier = { factor = 2 loyalty < 50 power_base < 20 }
	
	}

	effect = { 
	
	scope:player = {
	remove_list_variable = { name = current_chieftans_list target = root }
	root = { add_loyalty = chieftan_title_revoken }
	set_proper_numof_chieftans = yes
	}
	
	
	}

}
#tribal vottings#
#decrease power of chiefs
voting_decrease_power_of_chiefs = {

	scope = country


    is_shown = { 
	always = yes
    }
	is_valid = {
	number_of_elders >= 2
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }
	ai_is_valid = {
	is_tribal = yes
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
	}
	ai_chance = {
		base = 5
		modifier = { factor = 0 non_loyal_power_base < 25 }
		modifier = { factor = 0 non_loyal_power_base > 200 }
		}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	every_character = {
	limit = { is_clan_chief = yes }
	add_character_modifier = { name = revoken_decissive_power_councill duration = 1865 }
	add_loyalty = revoken_chieftans_power
	}
	
	}
}

voting_addvance_foward_into_future = {

	scope = country

    is_shown = { 
	always = yes
    }

	is_valid = {
	
	number_of_elders >= 2
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }
	ai_is_valid = {
	is_tribal = yes
	}
	ai_chance = {
		base = 5
		
	}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	add_country_modifier = { name = advancing_into_future  duration = 3650 }
	
	}
}

voting_mobilize_tribes = {

	scope = country

    is_shown = { 
	always = yes
    }
	ai_is_valid = {
	is_tribal = yes
	}
	is_valid = {
	number_of_elders >= 1
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }

	ai_chance = {
		base = 2
		modifier = {
		factor = 0 war = no months_to_war > 24
		}
		modifier = {
		factor = 4 months_to_war < 12
		}	
		modifier = {
		factor = 4 war = yes has_war_exhaustion < 1
		}
		
	}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	add_country_modifier = { name = mobilized_warriors_voting  duration = 3650 }
	
	}
}

voting_organize_city_founding = {

	scope = country

    is_shown = { 
	always = yes
    }
	ai_is_valid = {
	is_tribal = yes
	}
	is_valid = {
	number_of_elders >= 1
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }

	ai_chance = {
	base = 10
	modifier = { factor = 0.1 any_owned_province = { percent >= 0.4 has_province_rank = city }  }
	modifier = { factor = 0.1 any_owned_province = { percent >= 0.1 has_province_rank = city_metropolis }  }
	modifier = { factor = 2 any_owned_province = { percent >= 0.7 has_province_rank = settlement } }
	modifier = { factor = 5 any_owned_province = { percent >= 0.9 has_province_rank = settlement } }
	
	}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	add_country_modifier = { name = founding_cities_initiative_voting  duration = 3650 }
	
	}
}

voting_food_grants = {

	scope = country

    is_shown = { 
	always = yes
    }
	is_valid = {
	number_of_elders >= 1
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }
	ai_is_valid = {
	is_tribal = yes
	}
	ai_chance = {
		base = 3
		modifier = { factor = 0 months_to_war < 24 }
		modifier = { factor = 0 has_war_exhaustion > 2 }
		modifier = { factor = 0 any_country_state = { has_state_food_capacity < 125 } }
	}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	every_country_state = { add_state_food = -100 add_state_modifier = { name = granting_food_for_tribes  duration = 3650 } }

	}
}

voting_religoious_proclamations = {

	scope = country

    is_shown = { 
	always = yes
    }
	ai_is_valid = {
	is_tribal = yes
	}
	ai_chance = {
		base = 1
		modifier = { factor = 0.01 religious_unity >= 0.95 }
		modifier = { factor = 0.25 religious_unity >= 0.9 }
		modifier = { factor = 0.5 religious_unity >= 0.75 }
		modifier = { factor = 1.5 religious_unity < 0.75 }
		modifier = { factor = 2 religious_unity < 0.5 }
		modifier = { factor = 2 religious_unity < 0.25 }
	}
	is_valid = {
	number_of_elders >= 1
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }

	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	add_country_modifier = { name = religoious_proclamations_voting  duration = 3650 }
	
	}
}

voting_encourge_rising_new_buildings = {

	scope = country


    is_shown = { 
	always = yes
    }
	ai_is_valid = {
	is_tribal = yes
	}
	is_valid = {
	number_of_elders >= 2
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }
	ai_chance = {
		base = 1
		modifier = { factor = 0 any_owned_province = { count = all free_building_slots < 1 } }
		modifier = { factor = 2 any_owned_province = { percent >= 0.5 free_building_slots >= 1 } }
		modifier = { factor = 5 any_owned_province = { count = all free_building_slots >= 1 } }
	}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	add_country_modifier = { name = rising_new_buildings_voting  duration = 3650 }
	
	}
}

voting_progress_in_social_development = {

	scope = country

    is_shown = { 
	always = yes
    }
	ai_is_valid = {
	is_tribal = yes
	}
	is_valid = {
	number_of_elders >= 2
    support_of_elders > votting_treshold
	NOT = { has_country_modifier = voting_has_been_passed }
    }
	ai_chance = {
		base = 2
		modifier = { factor = 2 any_neighbour_country = { is_tribal = no } }
	}
	effect = { 
	#timer and variable change
	add_country_modifier = { name = voting_has_been_passed  duration = 3650 }
	
	 if = {
	 limit = { has_variable = votes_has_been_passed  }
	 change_variable = { name = votes_has_been_passed add = 1 }
	 }
	 else = {
	 set_variable = { name = votes_has_been_passed value = 1 }
	 }
	
	add_country_modifier = { name = social_development_voting  duration = 3650 }
	
	}
}
###############################
##nomadic authority mechanic###
###############################
nomadic_authority_is_active = {
	scope = country
	ai_is_valid = {
	always = no
	}
    is_shown = { 
	government = nomadic_tribe
	}
	is_valid = {
    always = yes
    }
	effect = { 
	}
}
#################################
###Merchant republic mechanics###
#################################
###########
#Elections#
###########
open_leading_famillies_heads_list = {
	scope = country
	ai_is_valid = {
	always = yes
	}
    is_shown = { 
	government = merchant_republic
    }
	ai_chance = {
		base = 1

		
		modifier = {
		factor = 5
		NOT = {  
		any_character = {
		has_variable = chosen_next_head_minister
		}
		}

	}
}
	is_valid = {
    always = yes
    }
	effect = { 
	if = { limit = { has_variable = leading_famillies_heads_shown } remove_variable = leading_famillies_heads_shown } 
	else = { set_variable = leading_famillies_heads_shown }
	
	generate_leading_famillies_heads_list = yes
	
	}

}

refresh_leading_famillies_heads_list_ai = {
   
   scope = country
   
   is_shown = { 
	is_ai = yes
    }
	is_valid = {
    always = yes
    }

	ai_is_valid = {
	any_character = {
	ROOT = { is_target_in_variable_list = { name = oligarchs_leading_famillies_heads target = PREV } } 
	is_alive = no
	}
	}
	
	ai_chance = {
	base = 1
	modifier = {
	factor = 5
		any_character = {
		ROOT = { is_target_in_variable_list = { name = oligarchs_leading_famillies_heads target = PREV } } 
		is_alive = no
		}
		}
	
	}
	
	
	effect = { 
	generate_leading_famillies_heads_list = yes
	}
}





leading_famillies_heads_list_is_shown = {
   
   scope = country
   
   is_shown = { 
	has_variable = leading_famillies_heads_shown
    }
	is_valid = {
    always = yes
    }

	effect = { 
	
	}
}


choose_as_next_headminister = {
   
   scope = character
   
   saved_scopes = {
   
   player
   
   }
   
   is_shown = { 
	always = yes
    }
	is_valid = {
	is_ruler = no
	NOT = { has_variable = chosen_next_head_minister }
	employer = { 
	NOT = {
	any_character = { has_character_modifier = chosen_as_next_head_minister }
	}
	}
    }
	ai_is_valid = {
	scope:player = { government = merchant_republic is_target_in_variable_list = { name = oligarchs_leading_famillies_heads target = ROOT } }
	NOT = { scope:player = { any_character = { has_character_modifier = chosen_as_next_head_minister }  } }
	is_alive = yes
	}
	ai_chance = {
		base = 1
		
		modifier = {
		factor = 5
		scope:player = {
		any_character = {
		has_character_modifier = chosen_as_next_head_minister
		is_alive = no
		}
		}
		}
		
		modifier = {
		factor = 5
		scope:player = {
		NOT = {  
		any_character = {
		has_variable = chosen_next_head_minister
		}
		}
		}

	}
	}

	effect = { 
	employer = { 
	every_character = { limit = { has_character_modifier = chosen_as_next_head_minister  } 
	remove_variable = chosen_next_head_minister 
	remove_character_modifier = chosen_as_next_head_minister 
	add_loyalty = revoken_chieftans_hedminister_place
	}
	
	}
	root = {
	set_variable = chosen_next_head_minister
	add_character_modifier = { name = chosen_as_next_head_minister duration = 1825 }
	}
	}

	}

#######################
#Trade Posts mechanics#
#######################

#ask_for_trading_consents = {
#
#   scope = country
#
#saved_scopes = {
#
#	reciever_country
#
#}
#
#   is_shown = { 
#	government = merchant_republic
#    }
#	
#	is_valid = {
#    NOT = {  }
#    }
#
#	effect = {
#	
#	scope:reciever_country = {
#	
#	trigger_event = { id = merchant_republic_events.2 }
#	
#	}
#	
#	
#	
#	}
#
#
#}

show_trade_post_panel = {

   
   scope = province
   
    is_shown = { 
	always = yes
    }
	is_valid = {
    has_variable = trade_post_constructed
    }

	effect = { 
	
	if = { limit = { has_variable = trade_post_panel_is_shown  } remove_variable = trade_post_panel_is_shown } 
	else = { set_variable = trade_post_panel_is_shown }
	
	
	}

}



trade_post_panel_is_shown_gui = {
 
   scope = province
   
   is_shown = { 
	has_variable = trade_post_panel_is_shown
    }
	is_valid = {
    has_variable = trade_post_panel_is_shown
    }

	effect = { 
	
	}

}

trade_posts_list_show_info = {

   
   scope = country
   
    is_shown = { 
	always = yes
    }
	is_valid = {
    always = yes
    }
	ai_is_valid = { always = no }
	
	effect = { 
	
	if = { limit = { has_variable = trade_posts_info_is_shown  } remove_variable = trade_posts_info_is_shown } 
	else = { set_variable = trade_posts_info_is_shown }
	
	get_trade_posts_list = yes
	
	}

}

trade_posts_list_is_shown_gui = {
 
   scope = province
   
   is_shown = { 
	has_variable = trade_posts_info_is_shown
    }
	is_valid = {
    always = yes
    }

	effect = { 
	
	}

}



build_trade_post = {

   
   scope = province
  
 saved_scopes = {

	trade_post_owner

}
   
    is_shown = {
	trigger_if = { 
	limit = { exists = scope:trade_post_owner  }
	scope:trade_post_owner = { government = merchant_republic }
	}
	trigger_else = { always = no }
	
	NOT = { has_variable = trade_post_constructed }
	
	}
	
	
	is_valid = {
	
	scope:trade_post_owner = { 
	government = merchant_republic 
	can_pay_price = rise_trade_post
	}
	
	has_owner = yes
	
	trigger_if = {
	limit = { has_owner = yes NOT = { scope:trade_post_owner = root.owner } }
	scope:trade_post_owner = { opinion = { target = root.owner value > 60 } }
	}
	
	root.region = { current_number_of_regional_trade_posts <= number_of_possible_trade_posts_in_region }
	
	scope:trade_post_owner = { current_number_of_owned_trade_posts <= number_of_possible_trade_posts_to_own }
	
	root.area = {  NOT = { any_area_province = { has_variable = trade_post_constructed } } }
	
	
	}

	ai_is_valid = {
	always = no
	}
	
	
	effect = { 
	
	set_variable = { name = trade_post_constructed value = scope:trade_post_owner }
	
	scope:trade_post_owner = { pay_price = rise_trade_post }
	
	
	
	}
	
	




}

trade_post_upgrade_company_own_laborers = {
  scope = province
  saved_scopes = {

	trade_post_owner

  }
 
 
 
  
   
    is_shown = { 
	always = yes
    }
	is_valid = {
	exists = scope:trade_post_owner
    scope:trade_post_owner = var:trade_post_constructed
	scope:trade_post_owner = { can_pay_price = trade_post_upgrade_resource_improvment }
    root.state = { NOT = { has_state_modifier = trading_company_laborers } }
	}

	effect = { 
	scope:trade_post_owner = { pay_price = trade_post_upgrade_resource_improvment }
	root.state = { add_state_modifier = { name = trading_company_laborers duration = -1 } }
	}

}

trade_post_upgrade_company_offices = {
  scope = province
  saved_scopes = {

	trade_post_owner

  }

    is_shown = { 
	always = yes
    }
	is_valid = {
	exists = scope:trade_post_owner
    scope:trade_post_owner = var:trade_post_constructed
	scope:trade_post_owner = { can_pay_price = trade_post_upgrade_offices }
    root.state = { NOT = { has_state_modifier = trading_company_offices } }
	}

	effect = { 
	scope:trade_post_owner = { pay_price = trade_post_upgrade_offices }
	root.state = { add_state_modifier = { name = trading_company_offices duration = -1 } }
	}

}


trade_post_upgrade_local_kantor = {
  scope = province
  saved_scopes = {

	trade_post_owner

  }

    is_shown = { 
	always = yes
    }
	is_valid = {
	exists = scope:trade_post_owner
    scope:trade_post_owner = var:trade_post_constructed
	
	scope:trade_post_owner = {
	invention = trading_kontors_establishment
	can_pay_price = trade_post_upgrade_kontor 
	}
	
    root.state = { NOT = { has_state_modifier = trading_company_kontor } }
	
	NOT = {
	root.owner = scope:trade_post_owner
	}
	
	}

	effect = { 
	scope:trade_post_owner = { pay_price = trade_post_upgrade_kontor }
	root.state = { add_state_modifier = { name = trading_company_kontor duration = -1 } }
	}

}
#berserkers tribe ability
rise_berserkers_host_ability = {
 
   scope = country
   
    is_shown = { 
	government = berserkers_tribe
	
    }
	is_valid = {
	trigger_if = { limit = { has_variable = rage_points_level  } 
	var:rage_points_level >= 25
	}
	trigger_else = { always = no }
    
	NOT = { has_country_modifier = rising_berserkers_host }
    }

	effect = {
	
	create_unit = {
	sub_unit = berserkers
	
	save_temporary_scope_as = berserkers_rising_host
	
	}
	
	scope:berserkers_rising_host = {
	add_subunit = berserkers
	}
	
	change_variable = { name = rage_points_level add = -25 }
	
	add_country_modifier = { name = rising_berserkers_host duration = 3650 }
	
	
	}
	

}
##########################
#Monastic order mechanics#
##########################
show_monastic_panel = {  
	
	scope = country
	
    is_shown = { 
	
	OR = {
	government = seekers_councill
	government = monastic_order
	}
	
    }
	ai_is_valid = {
	
	}
	ai_chance = {
		base = 1
	}
	is_valid = {
    always = yes
    }
	effect = { 

	}
}


#councill rise knights
rise_knights_button_monastic = {

	scope = country

	is_shown = { 
	government = monastic_order
	}
	
	ai_is_valid = {
	has_monthly_balance >= 2
	government = monastic_order
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	capital_scope = { controller = root }
	any_owned_province = { num_of_tnoble >= 1 }   
	NOT = { has_country_modifier = risen_knights_levy }
	
    }

	effect = {
	
	capital_scope = { 
	save_temporary_scope_as = leavy_rally_point
	}

	create_unit = {
	sub_unit = knights
	location = scope:leavy_rally_point
	
		while = {
		count = root.avivable_knights_leavy
		add_subunit = knights
		
		}
	
	}


	

	
	add_country_modifier = { name = risen_knights_levy duration = 1825 }
	}





}

invite_knights_button_monastic = {

	scope = country

	is_shown = { 
	government = monastic_order
	}
	
	ai_is_valid = {
	has_monthly_balance >= 5
	government = monastic_order
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	can_pay_price = invite_knights_house
	
	capital_scope = { controller = root }
	any_allied_country = {  
	has_variable = current_state_rank 
	var:current_state_rank >= 4
	}
	
	NOT = { has_country_modifier = invited_knights_house }
	
    }

	effect = {
	
	capital_scope = { 
	save_temporary_scope_as = leavy_rally_point
	}

	create_unit = {
	sub_unit = knights
	location = scope:leavy_rally_point
	
		while = {
		count = root.avivable_knights_to_invite
		add_subunit = knights
		
		}
	
	}
	add_country_modifier = { name = invited_knights_house duration = 1825 }
	
	pay_price = invite_knights_house
	}





}

rise_paladins_regiment = {

	scope = country

	is_shown = { 
	government = monastic_order
	}
	
	ai_is_valid = {
	has_monthly_balance >= 2
	government = monastic_order
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	can_pay_price = recruit_paladins
	
	capital_scope = { controller = root }
	
	NOT = { has_country_modifier = glory_for_paladins }
    }

	effect = {
	
	capital_scope = { 
	save_temporary_scope_as = leavy_rally_point
	}

	create_unit = {
	sub_unit = paladin
	location = scope:leavy_rally_point
	
	
	}
	
	pay_price = recruit_paladins
	
	add_country_modifier = { name = glory_for_paladins duration = 365  }
	custom_tooltip = "NEGATIVE_DEVOTION_DRIFT"
	}





}


persecute_religious_minorities_monastic = {

	scope = country

	is_shown = { 
	government = monastic_order
	}
	
	ai_is_valid = {
	
	government = monastic_order
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	any_owned_province = { NOT = { dominant_province_religion = root.religion } }
	
	NOT = { has_country_modifier = persecuted_religious_minorities  has_country_modifier = relived_religious_minorities }
    }

	effect = {
	
	add_country_modifier = { name = persecuted_religious_minorities duration = 730  }
	
	change_variable = { name = devotness_shift add = 2.5 }
	custom_tooltip = "POSITIVE_DEVOTION_DRIFT"
	}





}

relive_religious_minorities_monastic = {

	scope = country

	is_shown = { 
	government = monastic_order
	}
	
	ai_is_valid = {

	var:devotness_shift >= 20
	
	average_national_unrest > 2
	
	religious_unity <= 75
	
	government = monastic_order
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	any_owned_province = { NOT = { dominant_province_religion = root.religion } }
	
	NOT = { has_country_modifier = relived_religious_minorities has_country_modifier = persecuted_religious_minorities }
    }

	effect = {
	
	add_country_modifier = { name = relived_religious_minorities duration = 730  }
	
	change_variable = { name = devotness_shift add = -2.5 }
	
	}





}

start_witch_hunting_monastic = {

	scope = country

	is_shown = { 
	government = monastic_order
	}
	
	ai_is_valid = {

	var:devotness_shift < -15
	
	average_national_unrest < 2
	
	religious_unity <= 75
	
	government = monastic_order
	}
	ai_chance = {
		base = 5
	}
	is_valid = {
	
	OR = { 
	any_owned_province = { num_of_tmages >= 1 }
	devotion_value >= 60
	}
	
	
	NOT = { has_country_modifier = witch_hunting_proclimed }
    }

	effect = {
	
	add_country_modifier = { name = witch_hunting_proclimed duration = 365  }
	
	change_variable = { name = devotness_shift add = 5 }
	
	random_owned_province = { limit = { num_of_tmages >= 1 } every_pops_in_province = { limit = { pop_type = tmages  } kill_pop = yes  } }
	
	custom_tooltip = "POSITIVE_DEVOTION_DRIFT"
	
	}





}




get_grandmaster_candidates = {
	scope = country
	ai_is_valid = {
	always = yes
	}
    is_shown = { 
	OR = {
	government = seekers_councill
	government = monastic_order
	}
    }
	ai_chance = {
		base = 1

		
		modifier = {
		factor = 5
		NOT = {  
		any_character = {
		has_variable = chosen_next_grandmaster
		}
		}

	}
}
	is_valid = {
    always = yes
    }
	effect = { 
	
	generate_devoted_candiates_list = yes
	
	}

}

refresh_grandmaster_candiates_list_ai = {
   
   scope = country
   
   is_shown = { 
	is_ai = yes
    }
	is_valid = {
    always = yes
    }

	ai_is_valid = {
	any_character = {
	ROOT = { is_target_in_variable_list = { name = devoted_candiates_list target = PREV } } 
	is_alive = no
	}
	}
	
	ai_chance = {
	base = 1
	modifier = {
	factor = 5
		any_character = {
		ROOT = { is_target_in_variable_list = { name = devoted_candiates_list target = PREV } } 
		is_alive = no
		}
		}
	
	}
	
	
	effect = { 
	generate_devoted_candiates_list = yes
	}
}


choose_as_next_grandmaster = {
   
   scope = character
   
   saved_scopes = {
   
   player
   
   }
   
   is_shown = { 
	scope:player = {
	
	OR = {
	government = seekers_councill
	government = monastic_order
	}
	
	}

    }
	is_valid = {
	is_ruler = no
	NOT = { has_variable = chosen_next_grandmaster }
	employer = { 
	NOT = {
	any_character = { has_character_modifier = chosen_as_next_grandmaster }
	}
	}
    }
	ai_is_valid = {
	scope:player = { government = monastic_order is_target_in_variable_list = { name = devoted_candiates_list target = ROOT } }
	NOT = { scope:player = { any_character = { has_character_modifier = chosen_as_next_grandmaster }  } }
	is_alive = yes
	}
	ai_chance = {
		base = 1
		
		modifier = {
		factor = 5
		scope:player = {
		any_character = {
		has_character_modifier = chosen_as_next_grandmaster
		is_alive = no
		}
		}
		}
		
		modifier = {
		factor = 5
		scope:player = {
		NOT = {  
		any_character = {
		has_variable = chosen_next_grandmaster
		}
		}
		}

	}
	}

	effect = { 
	scope:player = { 
	every_character = { limit = { has_character_modifier = chosen_as_next_grandmaster  } 
	remove_variable = chosen_next_grandmaster 
	remove_character_modifier = chosen_as_next_grandmaster 
	add_loyalty = revoken_chieftans_grandmaster_place
	}
	set_variable = { name = chosen_next_grandmaster_display value = root }	
	}
	root = {
	set_variable = chosen_next_grandmaster
	add_character_modifier = { name = chosen_as_next_grandmaster duration = 1825 }
	}
	}

	}
	
show_devotion_level = {  
	
	scope = country
	
    is_shown = { 
	government = monastic_order
    }
	ai_is_valid = {
	always = no
	}

}	
#seekers councill
rise_mages_regiment = {

	scope = country

	is_shown = { 
	government = seekers_councill
	}
	
	ai_is_valid = {
	has_monthly_balance >= 2
	government = seekers_councill
	}
	ai_chance = {
		base = 1
		
	modifier = { factor = 5 war = yes }
	}
	is_valid = {
	
	can_pay_price = recruit_mages
	
	capital_scope = { controller = root }
	
	NOT = { has_country_modifier = enthusiastic_warlocks }
    }

	effect = {
	
	capital_scope = { 
	save_temporary_scope_as = leavy_rally_point
	}

	create_unit = {
	sub_unit = mages
	location = scope:leavy_rally_point
	
	
	}
	
	pay_price = recruit_mages
	
	add_country_modifier = { name = enthusiastic_warlocks duration = 365  }
	
	change_variable = { name = devotness_shift add = -1 }
	
	custom_tooltip = "NEGATIVE_WISDOM_DRIFT"
	
	}





}


direct_mages_to_libraries = {

	scope = country

	is_shown = { 
	government = seekers_councill
	}
	
	ai_is_valid = {
	
	government = seekers_councill
	}
	ai_chance = {
		base = 1
	
	modifier = {  
	
	factor = 5
	
	var:devotness_shift <= 10
	
	}
	
	modifier = {  
	
	factor = 0.1
	
	var:devotness_shift >= 45
	
	}
	
	modifier = {  
	
	factor = 0.5
	
			num_of_unit_type = {
				type = light_infantry
				value >= 10
			}
	
	}
	
	
	}
	is_valid = {
	
	NOT = { 
	has_country_modifier = mages_send_to_librariums 
	has_country_modifier = mages_reverted_to_reserves 
	has_country_modifier = mages_send_to_military_training 
	has_country_modifier = mages_send_to_economicum 
	}

    }

	effect = {
	
	add_country_modifier = { name = mages_send_to_librariums duration = 730  }
	
	change_variable = { name = devotness_shift add = 2.5 }
	
	custom_tooltip = "POSITIVE_WISDOM_DRIFT"
	
	}





}

request_mages_to_be_pulled_to_reserves = {

	scope = country

	is_shown = { 
	government = seekers_councill
	}
	
	ai_is_valid = {
	
	government = seekers_councill
	}
	ai_chance = {
	base = 1
	
	modifier = {  
	
	factor = 5
	
	var:devotness_shift <= 10
	
	}
	
	modifier = {  
	
	factor = 0.1
	
	var:devotness_shift >= 45
	
	}
	
	modifier = {  
	
	factor = 0
	
	OR = {
	war = yes
	months_to_war <= 24
	}
	
	}
	
	}
	is_valid = {
	
	NOT = { 
	has_country_modifier = mages_send_to_librariums 
	has_country_modifier = mages_reverted_to_reserves 
	has_country_modifier = mages_send_to_military_training 
	has_country_modifier = mages_send_to_economicum 
	}
	
	}

	effect = {
	
	add_country_modifier = { name = mages_reverted_to_reserves duration = 730  }
	
	change_variable = { name = devotness_shift add = 2.5 }
	
	custom_tooltip = "POSITIVE_WISDOM_DRIFT"
	
	}





}
	
direct_mages_to_economy = {

	scope = country

	is_shown = { 
	government = seekers_councill
	}
	
	ai_is_valid = {
	
	government = seekers_councill
	}
	ai_chance = {
	base = 1
	
	modifier = {  
	
	factor = 5
	
	var:devotness_shift >= 25
	
	
	}
	
	modifier = {  
	
	factor = 0.1
	
	var:devotness_shift <= 10
	
	}
	
	
	
	
	}
	is_valid = {
	
	
	
	NOT = { 
	has_country_modifier = mages_send_to_librariums 
	has_country_modifier = mages_reverted_to_reserves 
	has_country_modifier = mages_send_to_military_training 
	has_country_modifier = mages_send_to_economicum 
	}
	
    }

	effect = {
	
	add_country_modifier = { name = mages_send_to_economicum duration = 730  }
	
	change_variable = { name = devotness_shift add = -2.5 }
	
	custom_tooltip = "NEGATIVE_WISDOM_DRIFT"
	}





}

direct_mages_to_military_training = {

	scope = country

	is_shown = { 
	government = seekers_councill
	}
	
	ai_is_valid = {
	
	government = seekers_councill
	}
	ai_chance = {
	base = 1
	
	modifier = {  
	
	factor = 5
	
	var:devotness_shift >= 25
	
	
	}
	
	modifier = {  
	
	factor = 0.1
	
	var:devotness_shift <= 10
	
	}
	
	modifier = {  
	
	factor = 2
	
	months_to_war <= 6
	
	
	}
	
	
	
	}
	is_valid = {
	
	
	
	NOT = { 
	has_country_modifier = mages_send_to_librariums 
	has_country_modifier = mages_reverted_to_reserves 
	has_country_modifier = mages_send_to_military_training 
	has_country_modifier = mages_send_to_economicum 
	}
    }

	effect = {
	
	add_country_modifier = { name = mages_send_to_military_training duration = 730  }
	
	change_variable = { name = devotness_shift add = -2.5 }
	
	custom_tooltip = "NEGATIVE_WISDOM_DRIFT"
	}





}