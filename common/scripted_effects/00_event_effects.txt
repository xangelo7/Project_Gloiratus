## cs_ denotes country scope, default is character scope
## cs_ denotes country scope, default is character scope

remove_all_positions = {
	if = {
		limit = {	
			is_governor = yes
		}
		remove_as_governor = yes
	}
	
	if = {
		limit = {	
			has_any_office = yes
		}
		remove_all_offices = yes
	}
	
	if = {
		limit = {	
			has_tech_office = yes
		}
		remove_as_researcher = yes
	}
	
	if = {
		limit = {	
			in_command = yes
		}
		remove_command = yes
	}
	
}


taken_bribe_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = taken_bribe
			}
		}
		set_variable = {
			name = taken_bribe
			value = 1
		}
	}
	else = {
		change_variable = {
			name = taken_bribe
			add = 1
		}
	}

}

taken_bribe_effect_big = {
	if = {
		limit = {
			NOT = {
				has_variable = taken_bribe
			}
		}
		set_variable = {
			name = taken_bribe
			value = 4
		}
	}
	else = {
		change_variable = {
			name = taken_bribe
			add = 4
		}
	}

}


add_mentor_party_conviction = {
	if = {
		limit = {
			root = {
				employer = {
					has_party = party:military_party
				}
				party = military_party
			}
		}
		add_party_conviction = {
			party = military_party
			value = 10
		}
	}
	else_if = {
		limit = {
			root = {
				employer = {
					has_party = party:civic_party
				}
				party = civic_party
			}
		}
		add_party_conviction = {
			party = civic_party
			value = 10
		}
	}
	else_if = {
		limit = {
			root = {
				employer = {
					has_party = party:mercantile_party
				}
				party = mercantile_party
			}
		}
		add_party_conviction = {
			party = mercantile_party
			value = 10
		}
	}
	else_if = {
		limit = {
			root = {
				employer = {
					has_party = party:religious_party
				}
				party = religious_party
			}
		}
		add_party_conviction = {
			party = religious_party
			value = 10
		}
	}
	else_if = {
		limit = {
			root = {
				employer = {
					has_party = party:populist_party
				}
				party = populist_party
			}
		}
		add_party_conviction = {
			party = populist_party
			value = 10
		}
	}
}

add_military_favor_effect = {
	custom_tooltip = "military_favor_tooltip"
	if = {
		limit = {
			has_variable = military_favor
		}
		change_variable = {
			name = military_favor
			add = 1
		}
	}
	else = {
		set_variable = {
			name = military_favor
			value = 1
		}
	}
}

add_civic_favor_effect = {
	custom_tooltip = "civic_favor_tooltip"
	if = { 
		limit = {
			has_variable = civic_favor
		}
		change_variable = {
			name = civic_favor
			add = 1
		}
	}
	else = {
		set_variable = {
			name = civic_favor
			value = 1
		}
	}
}

add_mercantile_favor_effect = {
	custom_tooltip = "mercantile_favor_tooltip"
	if = {
		limit = {
			has_variable = mercantile_favor
		}
		change_variable = {
			name = mercantile_favor
			add = 1
		}
	}
	else = {
		set_variable = {
			name = mercantile_favor
			value = 1
		}
	}
}

add_religious_favor_effect = {
	custom_tooltip = "religious_favor_tooltip"
	if = {
		limit = {
			has_variable = religious_favor
		}
		change_variable = {
			name = religious_favor
			add = 1
		}
	}
	else = {
		set_variable = {
			name = religious_favor
			value = 1
		}
	}
}

add_populist_favor_effect = {
	custom_tooltip = "populist_favor_tooltip"
	if = {
		limit = {
			has_variable = populist_favor
		}
		change_variable = {
			name = populist_favor
			add = 1
		}
	}
	else = {
		set_variable = {
			name = populist_favor
			value = 1
		}
	}
}

add_favor_party_effect = {
	if = {
		limit = {
			party = military_party
		}
		root = {
			add_military_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			party = civic_party
		}
		root = {
			add_civic_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			party = religious_party
		}
		root = {
			add_religious_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			party = populist_party
		}
		root = {
			add_populist_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			party = mercantile_party
		}
		root = {
			add_mercantile_favor_effect = yes
		}
	}
}

faction_gift_proposal = {
	if = {
		limit = {
			scope:faction_target = {
				party = military_party
			}
			local_var:faction_issue = 1
		}
		add_manpower = {
			value = 0
			add = root.max_manpower
			divide = 10
			min = 1
		}
		add_military_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = military_party
			}
			local_var:faction_issue = 2
		}
		if = {
			limit = {
				NOT = {
					has_country_modifier = morale_boost
				}
			}
			add_country_modifier = {
				name = morale_boost
				duration = 730
			}
		}
		else = {
			add_treasury = {
				value = 0
				add = root.has_monthly_income
				multiply = 6
			}
		}
		add_military_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = military_party
			}
			local_var:faction_issue = 3
		}
		add_political_influence = influence_large
		add_military_favor_effect = yes
	}
	
	if = {
		limit = {
			scope:faction_target = {
				party = civic_party
			}
			local_var:faction_issue = 1
		}
		add_stability_effect = yes
		add_civic_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = civic_party
			}
			local_var:faction_issue = 2
		}
		if = {
			limit = {
				any_owned_province = {
					NOT = {
						has_province_modifier = state_owned_farmlands
					}
				}
			}
			random_owned_province = {
				limit = {
					NOT = {
						has_province_modifier = state_owned_farmlands
					}
				}
				add_province_modifier = {
					name = state_owned_farmlands
					duration = -1
				}
			}
		}
		else = {
			add_political_influence = influence_large
		}
		add_civic_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = civic_party
			}
			local_var:faction_issue = 3
		}
		add_political_influence = influence_large
		add_civic_favor_effect = yes
	}
	
	if = {
		limit = {
			scope:faction_target = {
				party = mercantile_party
			}
			local_var:faction_issue = 1
		}
		add_treasury = {
			value = 0
			add = root.has_monthly_income
			multiply = 6
		}
		add_mercantile_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = mercantile_party
			}
			local_var:faction_issue = 2
		}
		add_country_modifier = {
			name = tax_dividends_bonus
			duration = 730
		}
		add_mercantile_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = mercantile_party
			}
			local_var:faction_issue = 3
		}
		add_treasury = {
			value = 0
			add = root.has_monthly_income
			multiply = 3
		}
		add_mercantile_favor_effect = yes
	}
	
	if = {
		limit = {
			scope:faction_target = {
				party = religious_party
			}
			local_var:faction_issue = 1
		}
		add_stability_effect = yes
		add_religious_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = religious_party
			}
			local_var:faction_issue = 2
		}
		if = {
			limit = {
				NOT = {
					has_country_modifier = omen_bonus_faction
				}
			}
			add_country_modifier = {
				name = omen_bonus_faction
				duration = 730
			}
		}
		else = {
			add_political_influence = influence_medium
		}
		add_religious_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = religious_party
			}
			local_var:faction_issue = 3
		}
		add_political_influence = influence_large
		add_religious_favor_effect = yes
	}
	
	if = {
		limit = {
			scope:faction_target = {
				party = populist_party
			}
			local_var:faction_issue = 1
		}
		if = {
			limit = {
				any_owned_province = {
					NOT = {
						has_province_modifier = state_owned_farmlands
					}
				}
			}
			random_owned_province = {
				limit = {
					NOT = {
						has_province_modifier = state_owned_farmlands
					}
				}
				add_province_modifier = {
					name = state_owned_farmlands
					duration = -1
				}
			}
		}
		else = {
			add_tyranny = subtract_tyranny_small
		}
		add_populist_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = populist_party
			}
			local_var:faction_issue = 2
		}
		if = {
			limit = {
				NOT ={
					has_country_modifier = populist_bonus_faction_1
				}
			}
			add_country_modifier = {
				name = populist_bonus_faction_1
				duration = 730
			}
		}
		else = {
			add_treasury = {
				value = 0
				add = root.has_monthly_income
				multiply = 6
			}
		}
		add_populist_favor_effect = yes
	}
	if = {
		limit = {
			scope:faction_target = {
				party = populist_party
			}
			local_var:faction_issue = 3
		}
		add_political_influence = influence_large
		add_populist_favor_effect = yes
	}
}

add_party_support_small_effect = {
	if = {
		limit = {
			party = military_party
		}
		employer = {
			add_party_support = {
				party = military_party
				value = party_support_small
			}
		}
	}
	if = {
		limit = {
			party = civic_party
		}
		employer = {
			add_party_support = {
				party = civic_party
				value = party_support_small
			}
		}
	}
	if = {
		limit = {
			party = mercantile_party
		}
		employer = {
			add_party_support = {
				party = mercantile_party
				value = party_support_small
			}
		}
	}
	if = {
		limit = {
			party = religious_party
		}
		employer = {
			add_party_support = {
				party = religious_party
				value = party_support_small
			}
		}
	}
	if = {
		limit = {
			party = populist_party
		}
		employer = {
			add_party_support = {
				party = populist_party
				value = party_support_small
			}
		}
	}
}

subtract_party_support_small_effect = {
	if = {
		limit = {
			party = military_party
		}
		employer = {
			add_party_support = {
				party = military_party
				value = subtract_party_support_small
			}
		}
	}
	if = {
		limit = {
			party = civic_party
		}
		employer = {
			add_party_support = {
				party = civic_party
				value = subtract_party_support_small
			}
		}
	}
	if = {
		limit = {
			party = mercantile_party
		}
		employer = {
			add_party_support = {
				party = mercantile_party
				value = subtract_party_support_small
			}
		}
	}
	if = {
		limit = {
			party = religious_party
		}
		employer = {
			add_party_support = {
				party = religious_party
				value = subtract_party_support_small
			}
		}
	}
	if = {
		limit = {
			party = populist_party
		}
		employer = {
			add_party_support = {
				party = populist_party
				value = subtract_party_support_small
			}
		}
	}
}

add_party_support_large_effect = {
	if = {
		limit = {
			party = military_party
		}
		employer = {
			add_party_support = {
				party = military_party
				value = party_support_large
			}
		}
	}
	if = {
		limit = {
			party = civic_party
		}
		employer = {
			add_party_support = {
				party = civic_party
				value = party_support_large
			}
		}
	}
	if = {
		limit = {
			party = mercantile_party
		}
		employer = {
			add_party_support = {
				party = mercantile_party
				value = party_support_large
			}
		}
	}
	if = {
		limit = {
			party = religious_party
		}
		employer = {
			add_party_support = {
				party = religious_party
				value = party_support_large
			}
		}
	}
	if = {
		limit = {
			party = populist_party
		}
		employer = {
			add_party_support = {
				party = populist_party
				value = party_support_large
			}
		}
	}
}

subtract_party_support_large_effect = {
	if = {
		limit = {
			party = military_party
		}
		employer = {
			add_party_support = {
				party = military_party
				value = subtract_party_support_large
			}
		}
	}
	if = {
		limit = {
			party = civic_party
		}
		employer = {
			add_party_support = {
				party = civic_party
				value = subtract_party_support_large
			}
		}
	}
	if = {
		limit = {
			party = mercantile_party
		}
		employer = {
			add_party_support = {
				party = mercantile_party
				value = subtract_party_support_large
			}
		}
	}
	if = {
		limit = {
			party = religious_party
		}
		employer = {
			add_party_support = {
				party = religious_party
				value = subtract_party_support_large
			}
		}
	}
	if = {
		limit = {
			party = populist_party
		}
		employer = {
			add_party_support = {
				party = populist_party
				value = subtract_party_support_large
			}
		}
	}
}

random_favor_leader_effect = {
	random_list = {
		20 = {
			trigger = {
				AND = {
					has_variable = military_favor
					var:military_favor > 0
					any_character = {
						party = military_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = military_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = civic_favor
					var:civic_favor > 0
					any_character = {
						party = civic_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = civic_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = mercantile_favor
					var:mercantile_favor > 0
					any_character = {
						party = mercantile_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = mercantile_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = religious_favor
					var:religious_favor > 0
					any_character = {
						party = religious_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = religious_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = populist_favor
					var:populist_favor > 0
					any_character = {
						party = populist_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = populist_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
	}
}

random_favor_leader_3_effect = {
	random_list = {
		20 = {
			trigger = {
				AND = {
					has_variable = military_favor
					var:military_favor >= 3
					any_character = {
						party = military_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = military_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = civic_favor
					var:civic_favor >= 3
					any_character = {
						party = civic_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = civic_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = mercantile_favor
					var:mercantile_favor >= 3
					any_character = {
						party = mercantile_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = mercantile_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = religious_favor
					var:religious_favor >= 3
					any_character = {
						party = religious_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = religious_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
		20 = {
			trigger = {
				AND = {
					has_variable = populist_favor
					var:populist_favor >= 3
					any_character = {
						party = populist_party
						is_party_leader = yes
						NOT = {
							is_same_party_as = root.current_ruler
						}
					}
				}
			}
			random_character = {
				limit = {
					party = populist_party
					is_party_leader = yes
					NOT = {
						is_same_party_as = root.current_ruler
					}
				}
				save_scope_as = favor_party_leader
			}
		}
	}
}

subtract_military_favor_effect = {
	custom_tooltip = "remove_military_favor_tooltip"
	if = {
		limit = {
			has_variable = military_favor
			var:military_favor > 0
		}
		change_variable = {
			name = military_favor
			add = -1
		}
	}
	else = {
		set_variable = {
			name = military_favor
			value = 0
		}
	}
}

subtract_civic_favor_effect = {
	custom_tooltip = "remove_civic_favor_tooltip"
	if = {
		limit = {
			has_variable = civic_favor
			var:civic_favor > 0
		}
		change_variable = {
			name = civic_favor
			add = -1
		}
	}
	else = {
		set_variable = {
			name = civic_favor
			value = 0
		}
	}
}

subtract_mercantile_favor_effect = {
	custom_tooltip = "remove_mercantile_favor_tooltip"
	if = {
		limit = {
			has_variable = mercantile_favor
			var:mercantile_favor > 0
		}
		change_variable = {
			name = mercantile_favor
			add = -1
		}
	}
	else = {
		set_variable = {
			name = mercantile_favor
			value = 0
		}
	}
}

subtract_religious_favor_effect = {
	custom_tooltip = "remove_religious_favor_tooltip"
	if = {
		limit = {
			has_variable = religious_favor
			var:religious_favor > 0
		}
		change_variable = {
			name = religious_favor
			add = -1
		}
	}
	else = {
		set_variable = {
			name = religious_favor
			value = 0
		}
	}
}

subtract_populist_favor_effect = {
	custom_tooltip = "remove_populist_favor_tooltip"
	if = {
		limit = {
			has_variable = populist_favor
			var:populist_favor > 0
		}
		change_variable = {
			name = populist_favor
			add = -1
		}
	}
	else = {
		set_variable = {
			name = populist_favor
			value = 0
		}
	}
}

remove_favor_event_effect = {
	if = {
		limit = {
			is_alive = yes
			party = military_party
		}
		root = {
			subtract_military_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = civic_party
		}
		root = {
			subtract_civic_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = mercantile_party
		}
		root = {
			subtract_mercantile_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = religious_party
		}
		root = {
			subtract_religious_favor_effect = yes
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = populist_party
		}
		root = {
			subtract_populist_favor_effect = yes
		}
	}
}

remove_favor_event_3_effect = {
	if = {
		limit = {
			is_alive = yes
			party = military_party
		}
		root = {
			custom_tooltip = "subtract_3_favors_military"
			hidden_effect = {
				subtract_military_favor_effect = yes
				subtract_military_favor_effect = yes
				subtract_military_favor_effect = yes
			}
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = civic_party
		}
		root = {
			custom_tooltip = "subtract_3_favors_civic"
			hidden_effect = {
				subtract_civic_favor_effect = yes
				subtract_civic_favor_effect = yes
				subtract_civic_favor_effect = yes
			}
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = mercantile_party
		}
		root = {
			custom_tooltip = "subtract_3_favors_mercantile"
			hidden_effect = {
				subtract_mercantile_favor_effect = yes
				subtract_mercantile_favor_effect = yes
				subtract_mercantile_favor_effect = yes
			}
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = religious_party
		}
		root = {
			custom_tooltip = "subtract_3_favors_religious"
			hidden_effect = {
				subtract_religious_favor_effect = yes
				subtract_religious_favor_effect = yes
				subtract_religious_favor_effect = yes
			}
		}
	}
	else_if = {
		limit = {
			is_alive = yes
			party = populist_party
		}
		root = {
			custom_tooltip = "subtract_3_favors_populist"
			hidden_effect = {
				subtract_populist_favor_effect = yes
				subtract_populist_favor_effect = yes
				subtract_populist_favor_effect = yes
			}
		}
	}
}

party_favor_request_effect = {
	if = {
		limit = {
			is_alive = yes
			party = military_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 1
			}
		}
		root = {
			add_party_support = {
				party = military_party
				value = party_support_large
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = military_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 2
			}
		}
		root = {
			add_country_modifier = {
				name = military_party_ticking_modifier
				duration = 1460
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = military_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 3
			}
		}
		add_popularity = popularity_large
		add_prominence = prominence_large
	}
	
	if = {
		limit = {
			is_alive = yes
			party = civic_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 1
			}
		}
		root = {
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 3
			}
		}
		add_gold = {
			value = 0
			add = root.has_monthly_income
			multiply = 3
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = civic_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 2
			}
		}
		root = {
			add_country_modifier = {
				name = civic_party_ticking_modifier
				duration = 1460
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = civic_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 3
			}
		}
		add_popularity = popularity_large
		add_prominence = prominence_large
	}
	
	if = {
		limit = {
			is_alive = yes
			party = mercantile_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 1
			}
		}
		root = {
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 6
			}
		}
		add_gold = {
			value = 0
			add = root.has_monthly_income
			multiply = 6
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = mercantile_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 2
			}
		}
		root = {
			add_country_modifier = {
				name = mercantile_party_ticking_modifier
				duration = 1460
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = mercantile_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 3
			}
		}
		root = {
			if = {
				limit = {
					any_owned_province = {
						NOT = {
							has_province_modifier = local_tax_relief
						}
					}
				}
				random_owned_province = {
					limit = {
						NOT = {
							has_province_modifier = local_tax_relief
						}
					}
					add_province_modifier = {
						name = local_tax_relief
						duration = 1825
					}
				}
			}
			else = {
				add_political_influence = subtract_influence_large
			}
		}
	}
	
	if = {
		limit = {
			is_alive = yes
			party = religious_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 1
			}
		}
		root = {
			add_country_modifier = {
				name = religious_party_ticking_modifier
				duration = 1460
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = religious_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 2
			}
		}
		root = {
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 4
			}
		}
		add_gold = {
			value = root.has_monthly_income
			multiply = 4
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = religious_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 3
			}
		}
		root = {
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 4
			}
		}
		add_gold = {
			value = root.has_monthly_income
			multiply = 4
		}
	}
	
	if = {
		limit = {
			is_alive = yes
			party = populist_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 1
			}
		}
		root = {
			if = {
				limit = {
					any_character = {
						has_any_office = yes
						is_ruler = no
						is_same_party_as = root.current_ruler
						
					}
				}
				random_character = {
					limit = {
						has_any_office = yes
						is_ruler = no
						is_same_party_as = root.current_ruler
					}
					remove_all_offices = yes
				}
			}
			else = {
				remove_stability_effect = yes
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = populist_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 2
			}
		}
		add_prominence = prominence_huge 
		add_popularity = popularity_huge
		if = {
			limit = {
				is_minor_character = no
			}
			family = {
				add_prestige = prestige_large 
			}
		}
	}
	if = {
		limit = {
			is_alive = yes
			party = populist_party
			root = {
				has_local_variable = spend_random_favor
				local_var:spend_random_favor = 3
			}
		}
		root = {
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 12
			}
		}
		add_gold = {
			value = root.has_monthly_income
			multiply = 12
		}
	}
}

remove_all_favors_effect = {
	if = {
		limit = {
			party = military_party
		}
		root = {
			custom_tooltip = "military_party_favors_remove"
			set_variable = {
				name = military_favor
				value = 0
			}
		}
	}
	else_if = {
		limit = {
			party = civic_party
		}
		root = {
			custom_tooltip = "civic_party_favors_remove"
			set_variable = {
				name = civic_favor
				value = 0
			}
		}
	}
	else_if = {
		limit = {
			party = mercantile_party
		}
		root = {
			custom_tooltip = "religious_party_favors_remove"
			set_variable = {
				name = mercantile_favor
				value = 0
			}
		}
	}
	else_if = {
		limit = {
			party = religious_party
		}
		root = {
			custom_tooltip = "religious_party_favors_remove"
			set_variable = {
				name = religious_favor
				value = 0
			}
		}
	}
	else_if = {
		limit = {
			party = populist_party
		}
		root = {
			custom_tooltip = "populist_party_favors_remove"
			set_variable = {
				name = populist_favor
				value = 0
			}
		}
	}
}

remove_favors_stability_hit_effect = {
	if = {
		limit = {
			party = military_party
		}
		root = {
			add_stability = -10
		}
	}
	else_if = {
		limit = {
			party = civic_party
		}
		root = {
			add_stability = -10
		}
	}
	else_if = {
		limit = {
			party = mercantile_party
		}
		root = {
			add_stability = -10
		}
	}
	else_if = {
		limit = {
			party = religious_party
		}
		root = {
			add_stability = -10
		}
	}
	else_if = {
		limit = {
			party = populist_party
		}
		root = {
			add_stability = -10
		}
	}
}

remove_favors_tyranny_hit_effect = {
	if = {
		limit = {
			party = military_party
		}
		root = {
			add_tyranny = {
				value = 0
				add = root.var:military_favor
				max = 6
			}
		}
	}
	else_if = {
		limit = {
			party = civic_party
		}
		root = {
			add_tyranny = {
				value = 0
				add = root.var:civic_favor
				max = 6
			}
		}
	}
	else_if = {
		limit = {
			party = mercantile_party
		}
		root = {
			add_tyranny = {
				value = 0
				add = root.var:mercantile_favor
				max = 6
			}
		}
	}
	else_if = {
		limit = {
			party = religious_party
		}
		root = {
			add_tyranny = {
				value = 0
				add = root.var:religious_favor
				max = 6
			}
		}
	}
	else_if = {
		limit = {
			party = populist_party
		}
		root = {
			add_tyranny = {
				value = 0
				add = root.var:populist_favor
				max = 6
			}
		}
	}
}

add_military_senate_support_small_effect = {
	custom_tooltip = "military_senate_support_modifier_tooltip"
	set_variable = {
		name = military_senate_support_variable
		value = 10
		days = 730
	}
}

add_civic_senate_support_small_effect = {
	custom_tooltip = "civic_senate_support_modifier_tooltip"
	set_variable = {
		name = civic_senate_support_variable
		value = 10
		days = 730
	}
}

add_mercantile_senate_support_small_effect = {
	custom_tooltip = "mercantile_senate_support_modifier_tooltip"
	set_variable = {
		name = mercantile_senate_support_variable
		value = 10
		days = 730
	}
}

add_religious_senate_support_small_effect = {
	custom_tooltip = "religious_senate_support_modifier_tooltip"
	set_variable = {
		name = religious_senate_support_variable
		value = 10
		days = 730
	}
}

add_populist_senate_support_small_effect = {
	custom_tooltip = "populist_senate_support_modifier_tooltip"
	set_variable = {
		name = populist_senate_support_variable
		value = 10
		days = 730
	}
}

add_military_senate_support_large_effect = {
	custom_tooltip = "military_senate_support_modifier_large_tooltip"
	set_variable = {
		name = military_senate_support_variable
		value = 20
		days = 730
	}
}

add_civic_senate_support_large_effect = {
	custom_tooltip = "civic_senate_support_modifier_large_tooltip"
	set_variable = {
		name = civic_senate_support_variable
		value = 20
		days = 730
	}
}

add_mercantile_senate_support_large_effect = {
	custom_tooltip = "mercantile_senate_support_modifier_large_tooltip"
	set_variable = {
		name = mercantile_senate_support_variable
		value = 20
		days = 730
	}
}

add_religious_senate_support_large_effect = {
	custom_tooltip = "religious_senate_support_modifier_large_tooltip"
	set_variable = {
		name = religious_senate_support_variable
		value = 20
		days = 730
	}
}

add_populist_senate_support_large_effect = {
	custom_tooltip = "populist_senate_support_modifier_large_tooltip"
	set_variable = {
		name = populist_senate_support_variable
		value = 20
		days = 730
	}
}

move_character_effect = { #Displays different tooltip if character is a governor and will take his province with him
	if = {
		limit = {
			this = {
				is_governor = yes
			}
		}
		custom_tooltip = governor_defection_tooltip
		hidden_effect = {
			move_country = root
		}
	}
	else = {
		move_country = root
	}
}

add_commander_ambition_effect = {
	custom_tooltip = "commander_becomes_ambitious"
	if = {
		limit = {
			NOT = {
				has_variable = commander_ambition
			}
		}
		set_variable = {
			name = commander_ambition
			value = 1
		}
	}
	else = {
		change_variable = {
			name = commander_ambition
			add = 1
		}
	}
}

subtract_commander_ambition_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = commander_ambition
			}
		}
		set_variable = {
			name = commander_ambition
			value = 0
		}
	}
	else = {
		change_variable = {
			name = commander_ambition
			add = -1
		}
	}
}

reset_commander_ambition_effect = {
	set_variable = {
		name = commander_ambition
		value = 0
	}
}

add_military_party_impact_effect = {
	custom_tooltip = "add_military_party_impact_tooltip"
	set_variable = {
		name = military_party_pleasure
		days = 730
	}
}

subtract_military_party_impact_effect = {
	custom_tooltip = "subtract_military_party_impact_tooltip"
	set_variable = {
		name = military_party_displeasure
		days = 730
	}
}

add_civic_party_impact_effect = {
	custom_tooltip = "add_civic_party_impact_tooltip"
	set_variable = {
		name = civic_party_pleasure
		days = 730
	}
}

subtract_civic_party_impact_effect = {
	custom_tooltip = "subtract_civic_party_impact_tooltip"
	set_variable = {
		name = civic_party_displeasure
		days = 730
	}
}

add_mercantile_party_impact_effect = {
	custom_tooltip = "add_mercantile_party_impact_tooltip"
	set_variable = {
		name = mercantile_party_pleasure
		days = 730
	}
}

subtract_mercantile_party_impact_effect = {
	custom_tooltip = "subtract_mercantile_party_impact_tooltip"
	set_variable = {
		name = mercantile_party_displeasure
		days = 730
	}
}

add_religious_party_impact_effect = {
	custom_tooltip = "add_religious_party_impact_tooltip"
	set_variable = {
		name = religious_party_pleasure
		days = 730
	}
}

subtract_religious_party_impact_effect = {
	custom_tooltip = "subtract_religious_party_impact_tooltip"
	set_variable = {
		name = religious_party_displeasure
		days = 730
	}
}

add_populist_party_impact_effect = {
	custom_tooltip = "add_populist_party_impact_tooltip"
	set_variable = {
		name = populist_party_pleasure
		days = 730
	}
}

subtract_populist_party_impact_effect = {
	custom_tooltip = "subtract_populist_party_impact_tooltip"
	set_variable = {
		name = populist_party_displeasure
		days = 730
	}
}

add_stability_effect = {
	if = {
		limit = {
			stability >= 90
		}
		add_political_influence = influence_medium
	}
	else = {
		add_stability = 6
	}
}

add_medium_stability_effect = {
	if = {
		limit = {
			stability >= 75
			stability < 85
		}
		add_political_influence = influence_small
	}
	else_if = {
		limit = {
			stability >= 85
		}
		add_political_influence = influence_medium
	}
	else = {
		add_stability = 8
	}
}

add_greater_stability_effect = {
	if = {
		limit = {
			stability >= 70
			stability < 80
		}
		add_political_influence = influence_medium
	}
	else_if = {
		limit = {
			stability >= 80
		}
		add_political_influence = influence_large
	}
	else = {
		add_stability = 10
	}
}

remove_stability_effect = {
	if = {
		limit = {
			stability < 5
		}
		add_political_influence = subtract_influence_medium
	}
	else = {
		add_stability = -5
	}
}

capital_formable_tribal_effect = {
	custom_tooltip = "capital_formable_tribal_effect_tooltip"
	hidden_effect = {
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
}

capital_formable_tribal_large_effect = {
	custom_tooltip = "capital_formable_tribal_large_effect_tooltip"
	hidden_effect = {
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
}

capital_formable_small_effect = {
	custom_tooltip = "capital_formable_small_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
	}
}

capital_formable_medium_effect = { #province scope
	custom_tooltip = "capital_formable_medium_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
	}
}

capital_formable_large_effect = { #province scope
	custom_tooltip = "capital_formable_large_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

capital_formable_huge_effect = { #province scope
	custom_tooltip = "capital_formable_huge_effect_tooltip"
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = freemen
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

province_pop_disaster_minor = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.1
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_pop_disaster_medium = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.15
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_pop_disaster_major = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.3
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_pop_disaster_historical = {
	ordered_pops_in_province = {
		order_by = pop_hapiness
		max = {
			value = total_population
			multiply = 0.7
			round = floor
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

province_volcano_affected_effect = {
	province_volcano_affected_tooltip_effect = yes
	if = {
		limit = {
			is_capital = yes
		}
		hidden_effect = {
			province_pop_disaster_medium = yes
		}
	}
	else = {
		hidden_effect = {
			province_pop_disaster_major = yes
		}
	}
	if = {
		limit = {
			NOR = { 
				has_province_modifier = province_diminishment_destroyed_volcano 
				has_province_modifier = province_diminishment_ravaged_volcano
			}
		}
		add_permanent_province_modifier = {
			name = province_diminishment_ravaged_volcano
			duration = 3650
		}
	}
}

province_volcano_affect_scopes_effect = {
	if = {
		limit = {
			NOT = { exists = scope:first_volcano_province }
		}
		save_scope_as = first_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:second_volcano_province }
		}
		save_scope_as = second_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:third_volcano_province }
		}
		save_scope_as = third_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:fourth_volcano_province }
		}
		save_scope_as = fourth_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:fifth_volcano_province }
		}
		save_scope_as = fifth_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:sixth_volcano_province }
		}
		save_scope_as = sixth_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:seventh_volcano_province }
		}
		save_scope_as = seventh_volcano_province
	}
	else_if = {
		limit = {
			NOT = { exists = scope:eight_volcano_province }
		}
		save_scope_as = eight_volcano_province
	}
}

province_volcano_affected_tooltip_effect = {
	if = {
		limit = {
			exists = scope:first_volcano_province
			this = scope:first_volcano_province
		}
		custom_tooltip = volcano_first_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:second_volcano_province
			this = scope:second_volcano_province
		}
		custom_tooltip = volcano_second_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:third_volcano_province
			this = scope:third_volcano_province
		}
		custom_tooltip = volcano_third_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:fourth_volcano_province
			this = scope:fourth_volcano_province
		}
		custom_tooltip = volcano_fourth_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:fifth_volcano_province
			this = scope:fifth_volcano_province
		}
		custom_tooltip = volcano_fifth_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:sixth_volcano_province
			this = scope:sixth_volcano_province
		}
		custom_tooltip = volcano_sixth_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:seventh_volcano_province
			this = scope:seventh_volcano_province
		}
		custom_tooltip = volcano_seventh_affected_province.tt
	}
	else_if = {
		limit = {
			exists = scope:eight_volcano_province
			this = scope:eight_volcano_province
		}
		custom_tooltip = volcano_eight_affected_province.tt
	}
}

char_banishment_effect = {
	remove_all_positions = yes
	employer = {
		if = {
			limit = {
				any_neighbour_country = {
					always = yes
				}
			}
			random_neighbour_country = {
				save_scope_as = banishment_country
			}
		}
		else = {
			random_country = {
				save_scope_as = banishment_country
			}
		}
	}
	banish = scope:banishment_country
}

merciful_ruler_effect = {
	owner = {
		if = {
			limit = {
				is_monarchy = yes
				exists = current_ruler
			}
			add_legitimacy = legitimacy_large
		}
		current_ruler = {
			add_popularity = popularity_large
		}
		scope:special_province = {
			add_province_modifier = {
				name = province_improvement_merciful_conqueror
				duration = 3650
			}
		}
	}
}

neutral_conqueror_effect = {
	owner = {
		add_treasury = {
			value = has_monthly_income
			multiply = 6
		}
		current_ruler = {
			add_prominence = prominence_medium
			add_popularity = subtract_popularity_small
		}
		scope:special_province = {
			if = {
				limit = {
					has_province_modifier = province_diminishment_medium_looted
				}
				hidden_effect = {
					remove_province_modifier = province_diminishment_medium_looted
				}
			}
			add_province_modifier = {
				name = province_diminishment_medium_looted
				duration = 3650
			}
			custom_tooltip = neutral_conqueror_effect_tooltip
			hidden_effect = {
				ordered_pops_in_province = {
					order_by = pop_hapiness
					max = {
						value = total_population
						divide = 8
					}
					min = {
						value = 0
					}
					kill_pop = yes
				}
			}
			set_variable = {
				name = sacked_province
				days = 3650
			}
		}
	}
}

sacking_conqueror_effect = {
	owner = {
		add_treasury = {
			value = has_monthly_income
			multiply = 16
		}
		current_ruler = {
			add_prominence = prominence_large
			add_popularity = subtract_popularity_medium
			add_corruption = corruption_medium
		}
		scope:special_province = {
			reduce_province_rank_effect = yes
			if = {
				limit = {
					OR = {
						has_province_modifier = province_diminishment_medium_looted
						has_province_modifier = province_diminishment_super_looted
					}
				}
				hidden_effect = {
					remove_province_modifier = province_diminishment_medium_looted
					remove_province_modifier = province_diminishment_super_looted
				}
			}
			add_province_modifier = {
				name = province_diminishment_super_looted
				duration = 7300
			}
			custom_tooltip = sacking_conqueror_effect_tooltip
			hidden_effect = {
				ordered_pops_in_province = {
					order_by = pop_hapiness
					max = {
						value = total_population
						divide = 3
					}
					min = {
						value = 0
					}
					kill_pop = yes
				}
			}
			set_variable = {
				name = sacked_province
				days = 10950
			}
		}
	}
}

salt_earth_effect = {
	owner = {
		add_treasury = {
			value = has_monthly_income
			multiply = 20
		}
		current_ruler = {
			add_prominence = prominence_large
			add_popularity = subtract_popularity_huge
			add_corruption = corruption_large
		}
		scope:special_province = {
			reduce_province_rank_effect = yes
			if = {
				limit = {
					OR = {
						has_province_modifier = province_diminishment_medium_looted
						has_province_modifier = province_diminishment_super_looted
					}
				}
				hidden_effect = {
					remove_province_modifier = province_diminishment_medium_looted
					remove_province_modifier = province_diminishment_super_looted
				}
			}
			add_province_modifier = {
				name = rm_4_salted_pmod
				duration = 7300
			}
			custom_tooltip = salt_earth_effect_tooltip
			hidden_effect = {
				ordered_pops_in_province = {
					order_by = pop_hapiness
					max = {
						value = total_population
						divide = 2
					}
					min = {
						value = 0
					}
					kill_pop = yes
				}
			}
			set_variable = {
				name = sacked_province
				days = 10950
			}
		}
	}
}


dhe_judea_conversion_province_forced_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 4
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}

dhe_judea_conversion_province_tolerated_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 6
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}

dhe_judea_conversion_not_jew_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 6
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}

dhe_judea_conversion_not_jew_all_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
		}
		check_range_bounds = no
		set_pop_religion = root.religion
	}
}


dhe_judea_conversion_jew_se = {
	ordered_pops_in_province = {
		limit = {
			NOT = {
				pop_religion = judaism
			}
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 6
		}
		check_range_bounds = no
		set_pop_religion = judaism
	}
}

dhe_judea_province_non_jews_attacked_se = {
	ordered_pops_in_province = {
		limit = {
			NOT = {
				pop_religion = judaism
			}
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 20
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

dhe_judea_looting_retaliation_se = {
	ordered_pops_in_province = {
		limit = {
			pop_religion = judaism
		}
		order_by = pop_hapiness
		max = {
			value = total_population
			divide = 20
		}
		check_range_bounds = no
		kill_pop = yes
	}
}

country_overlord_vassal_character_effect = {
	if = {
		limit = {
			NOT = {
				any_character = {
					is_ruler = no
					has_any_office = yes
					has_variable = overlord_vassal
				}
			}
		}
		random_character = {
			limit = {
				has_any_office = yes
				is_ruler = no
				NOT = { has_variable = overlord_vassal }
			}
			save_scope_as = overlord_vassal
			set_variable = {
				name = overlord_vassal
			}
		}
	}
	else = {
		random_character = {
			limit = {
				has_any_office = yes
				is_ruler = no
				has_variable = overlord_vassal
			}
			save_scope_as = overlord_vassal 
			set_variable = {
				name = overlord_vassal
			}
		}
	}
}

character_remove_a_bad_leader_trait_effect = {
	if = {
		limit = {
			has_trait = tactically_inflexible
		}
		remove_trait = tactically_inflexible
	}
	else_if = {
		limit = {
			has_trait = arbitrary
		}
		remove_Trait = arbitrary
	}
	else_if = {
		limit = {
			has_trait = cruel
		}
		remove_trait = cruel
	}
	else_if = {
		limit = {
			has_trait = corrupt
		}
		remove_trait = corrupt
	}
	else_if = {
		limit = {
			has_trait = selfish
		}
		remove_trait = selfish
	}
	else_if = {
		limit = {
			has_trait = deceitful
		}
		remove_trait = deceitful
	}
	else_if = {
		limit = {
			has_trait = lazy
		}
		remove_trait = lazy
	}
	else_if = {
		limit = {
			has_trait = foolish
		}
		remove_trait = foolish
	}
	else_if = {
		limit = {
			has_trait = miserly
		}
		remove_trait = miserly
	}
}

set_friend_progress_small_effect = {
	custom_tooltip = friend_progress_small
	if = {
		limit = {
			NOT = {
				has_variable = friend_progress
			}
		}
		set_variable = {
			name = friend_progress
			value = 1
		}
	}
	else = {
		change_variable = {
			name = friend_progress
			add = 1
		}
	}
}

set_friend_progress_moderate_effect = {
	custom_tooltip = friend_progress_moderate
	if = {
		limit = {
			NOT = {
				has_variable = friend_progress
			}
		}
		set_variable = {
			name = friend_progress
			value = 2
		}
	}
	else = {
		change_variable = {
			name = friend_progress
			add = 2
		}
	}
}

set_friend_progress_large_effect = {
	custom_tooltip = friend_progress_large
	if = {
		limit = {
			NOT = {
				has_variable = friend_progress
			}
		}
		set_variable = {
			name = friend_progress
			value = 3
		}
	}
	else = {
		change_variable = {
			name = friend_progress
			add = 3
		}
	}
}

remove_friend_variables = {
	if = {
		limit = {
			has_variable = friend_progress
		}
		remove_variable = friend_progress
	}
	if = {
		limit = {
			has_variable = befriend_toggle_1
		}
		remove_variable = befriend_toggle_1
	}
	if = {
		limit = {
			has_variable = befriend_toggle_2
		}
		remove_variable = befriend_toggle_2
	}
	if = {
		limit = {
			has_variable = befriend_toggle_3
		}
		remove_variable = befriend_toggle_3
	}
	if = {
		limit = {
			has_variable = befriend_toggle_4
		}
		remove_variable = befriend_toggle_4
	}
	if = {
		limit = {
			has_variable = befriend_toggle_5
		}
		remove_variable = befriend_toggle_5
	}
	if = {
		limit = {
			has_variable = befriend_toggle_6
		}
		remove_variable = befriend_toggle_6
	}
	if = {
		limit = {
			has_variable = currently_befriending
			exists = var:currently_befriending
		}
		var:currently_befriending = {
			remove_variable = being_befriended
		}
	}
	if = {
		limit = {
			has_variable = currently_befriending
		}
		remove_variable = currently_befriending
	}
	if = {
		limit = {
			has_variable = friend_event_counter
		}
		remove_variable = friend_event_counter
	}
}

fire_next_friend_event_effect = {
	if = {
		limit = {
			has_variable = friend_progress
			var:friend_progress >= 6
		}
		trigger_event = {
			on_action = befriend_resolution
			days = { 15 60 }
		}
	}
	else_if = {
		limit = {
			has_variable = friend_event_counter
			var:friend_event_counter >= 3
		}
		trigger_event = {
			on_action = befriend_fail
			days = { 15 60 }
		}
	}
	else = {
		trigger_event = {
			on_action = befriend_pulse
			days = { 15 60 }
		}
	}
}

befriend_event_counter_variable_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = friend_event_counter
			}
		}
		set_variable = {
			name = friend_event_counter
			value = 1
		}
	}
	else = {
		change_variable = {
			name = friend_event_counter
			add = 1
		}
	}
}

pass_down_traits_effect = {
	scope:newborn = {
		if = {
			limit = {
				exists = father
				OR = {
					father = {
						has_trait = alcimachid
						has_trait = antigonids
						has_trait = antipatrid
						has_trait = lagids
						has_trait = seleucids
						has_trait = argeads
					}
				}
			}
			if = {
				limit = {
					father = {
						has_trait = alcimachid
					}
					NOT = {
						has_trait = alcimachid
					}
				}
				add_trait = alcimachid
			}
			else_if = {
				limit = {
					father = {
						has_trait = antigonids
					}
					NOT = {
						has_trait = antigonids
					}
				}
				add_trait = antigonids
			}
			else_if = {
				limit = {
					father = {
						has_trait = antipatrid
					}
					NOT = {
						has_trait = antipatrid
					}
				}
				add_trait = antipatrid
			}
			else_if = {
				limit = {
					father = {
						has_trait = lagids
					}
					NOT = {
						has_trait = lagids
					}
				}
				add_trait = lagids
			}
			else_if = {
				limit = {
					father = {
						has_trait = seleucids
					}
					NOT = {
						has_trait = seleucids
					}
				}
				add_trait = seleucids
			}
			if = {
				limit = {
					father = {
						has_trait = argeads
					}
					NOT = {
						has_trait = argeads
					}
				}
				add_trait = argeads
			}
		}
		if = {
			limit = {
				exists = mother
				mother = {
					has_trait = argeads
				}
				NOT = {
					has_trait = argeads
				}
			}
			add_trait = argeads
			
		}
	}
}

positive_religious_caste_effect = {
	if = {
		limit = {
			is_monarchy = yes
			NOT = { has_law = religious_integration_efforts }
		}
		change_law = religious_integration_efforts
	}
	else_if = {
		limit = {
			is_tribal = yes
			NOT = { has_law = adopt_human_sacrifice_law_tribal }
		}
		change_law = adopt_human_sacrifice_law_tribal
	}
	else_if = {
		limit = {
			is_republic = yes
			NOT = { tag = ROM }
			NOT = { has_law = republican_religious_2 }
		}
		change_law = republican_religious_2
	}
	else_if = {
		limit = {
			is_republic = yes
			tag = ROM
			NOT = { has_law = grant_religious_freedoms }
		}
		change_law = grant_religious_freedoms
	}
}

rival_brothers_scope_effect = {		
	ordered_successor = {
		limit = {
			is_child_of = root.current_ruler
			from_ruler_family = yes
			prisoner = no
			is_female = no
			age >= 18
			age <= 30
			has_any_illness_trigger = no
			employer = root
			save_temporary_scope_as = rival_brother_1_temp_e
			OR = {
				AND = {
					can_get_rivals = yes
					any_sibling = {
						is_successor = yes
						is_child_of = root.current_ruler
						from_ruler_family = yes
						prisoner = no
						is_female = no
						age >= 18
						age <= 30
						can_get_rivals = yes # Is not rival and could be
						has_any_illness_trigger = no
						employer = root
						NOT = { is_rival = scope:rival_brother_1_temp_e }
					}
				}
				AND = {
					num_of_rivals >= 1
					any_rival = {
						is_successor = yes
						is_sibling_of = scope:rival_brother_1_temp_e
						is_child_of = root.current_ruler
						from_ruler_family = yes
						prisoner = no
						is_female = no
						age >= 18
						age <= 30
						has_any_illness_trigger = no
						employer = root
					}
				}
			}
		}
		order_by = age
		save_scope_as = rival_brother_1
		random_sibling = { # Save second brother
			limit = {
				is_child_of = root.current_ruler
				from_ruler_family = yes
				prisoner = no
				is_female = no
				age >= 18
				age <= 30
				OR = {
					AND = { 
						can_get_rivals = yes
						NOT = { is_rival = scope:rival_brother_1 }
					}
					AND = {
						num_of_rivals >= 1
						is_rival = scope:rival_brother_1
					}
				}
				has_any_illness_trigger = no
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = rival_brother_2
		}
	}
}

rival_brothers_duel_effect = {
	hidden_effect = {
		random_list = { # Pick Winner
			5 = {
				modifier = {
					factor = 3
					scope:rival_brother_1 = { martial > 4 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_1 = { martial > 6 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_1 = { martial > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = brave }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = confident }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = energetic }
				}
				modifier = {
					factor = 1
					scope:rival_brother_1 = { has_trait = reckless }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_victor
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_loser
				}
			}
			5 = {
				modifier = {
					factor = 3
					scope:rival_brother_2 = { martial > 4 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_2 = { martial > 6 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_2 = { martial > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = brave }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = confident }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = energetic }
				}
				modifier = {
					factor = 1
					scope:rival_brother_2 = { has_trait = reckless }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_loser
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_victor
				}
			}
		}
		random_list = { # Pick Result
			2 = {
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = merciful }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = pious }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = loving }
				}
			}
			2 = {
				set_variable = rival_brothers_wound
			}
			2 = {
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = vengeful }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = cruel }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = ambitious }
				}
				set_variable = rival_brothers_death
			}
		}
	}
}

rival_brothers_assassination_effect = {
	hidden_effect = {
		random_list = { # Pick Assassin
			5 = {
				modifier = {
					factor = 3
					scope:rival_brother_1 = { finesse > 4 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_1 = { finesse > 6 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_1 = { finesse > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = crafty }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = corrupt }
				}		
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = harsh }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = deceitful }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = shrewd }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = ambitious }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = coward }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = jealous }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = arbitrary }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_trait = uncaring }
				}
				modifier = {
					factor = 2
					scope:rival_brother_1 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_victor
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_loser
				}
			}
			5 = {
				modifier = {
					factor = 3
					scope:rival_brother_2 = { finesse > 4 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_2 = { finesse > 6 }
				}
				modifier = {
					factor = 3
					scope:rival_brother_2 = { finesse > 8 }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = crafty }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = corrupt }
				}		
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = harsh }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = deceitful }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = shrewd }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = ambitious }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = coward }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = jealous }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = arbitrary }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_trait = uncaring }
				}
				modifier = {
					factor = 2
					scope:rival_brother_2 = { has_character_modifier = character_ip_mon_supported_heir_modifier }
				}
				scope:rival_brother_2 = {
					save_scope_as = rival_brothers_loser
				}
				scope:rival_brother_1 = {
					save_scope_as = rival_brothers_victor
				}
			}
		}
		random_list = { # Pick Result
			2 = {
				modifier = {
					factor = -5
					scope:rival_brothers_victor = { finesse <= 5 }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = rash }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = weak_willed }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = coward }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = obsessive }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = arrogant }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = foolish }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = reckless }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = proud }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = incapable }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = dumb }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = lazy }
				}
				random = { 
					chance = 70 
					set_variable = rival_brothers_wound 
				}
			}
			2 = {
				modifier = {
					factor = 5
					scope:rival_brothers_victor = { finesse >= 6 }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = vengeful }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = cautious }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = ambitious }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = deceitful }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = intelligent }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = silver_tongued }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = sceptical }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = polymath }
				}
				modifier = {
					factor = 4
					scope:rival_brothers_victor = { has_trait = stubborn }
				}
				set_variable = rival_brothers_death
			}
		}
	}
}

rival_brothers_assassination_outcome_effect = {
	if = { # If botched and wound
		limit = { 
			has_variable = rival_brothers_wound
			scope:rival_brothers_loser = { is_alive = yes }
		}
		random_list = {
			40 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = wounded }
					}
				}
				scope:rival_brothers_loser = { add_trait = wounded }
			}
			20 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = maimed }
					}
				}
				scope:rival_brothers_loser = { add_trait = maimed }
			}
			10 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = blind }
					}
				}
				scope:rival_brothers_loser = { 
					if = { 
						limit = { has_trait = one_eyed }
						remove_trait = one_eyed
						add_trait = blind
					}
					else = { add_trait = one_eyed }
				 }
			}
			10 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = maimed }
					}
				}
				scope:rival_brothers_loser = { add_trait = maimed }
			}
			20 = {
				trigger = {
					scope:rival_brothers_loser = {
						has_trait = maimed
					}
				}
				scope:rival_brothers_loser = { add_health = -25 }
			}
		}
	}
	else_if = { # If succeed and kill
		limit = { 
			has_variable = rival_brothers_death
			scope:rival_brothers_loser = { is_alive = yes }
		}
		scope:rival_brothers_loser = {
			death = {
				death_reason = death_stabbing
				killer = scope:rival_brothers_victor
			}
		}
	}	
	if = {
		limit = {
			scope:rival_brothers_victor = { is_alive = yes }
		}
		scope:rival_brothers_victor = { add_popularity = subtract_popularity_medium }
	}
}

rival_brothers_duel_outcome_effect = {
	if = { # Wound
		limit = { 
			has_variable = rival_brothers_wound
			scope:rival_brothers_loser = { is_alive = yes }
		}
		random_list = {
			40 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = wounded }
					}
				}
				scope:rival_brothers_loser = { add_trait = wounded }
			}
			20 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = maimed }
					}
				}
				scope:rival_brothers_loser = { add_trait = maimed }
			}
			10 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = blind }
					}
				}
				scope:rival_brothers_loser = {
					if = { 
						limit = { has_trait = one_eyed }
						remove_trait = one_eyed
						add_trait = blind
					}
					else = { add_trait = one_eyed }
				}
			}
			10 = {
				trigger = {
					scope:rival_brothers_loser = {
						NOT = { has_trait = maimed }
					}
				}
				scope:rival_brothers_loser = { add_trait = maimed }
			}
			20 = {
				trigger = {
					scope:rival_brothers_loser = {
						has_trait = maimed
					}
				}
				scope:rival_brothers_loser = { add_health = -25 }
			}
		}
	}	
	else_if = { # Kill
		limit = {
			has_variable = rival_brothers_death 
			scope:rival_brothers_loser = { is_alive = yes }
		}
		scope:rival_brothers_loser = {
			death = {
				death_reason = death_battle
				killer = scope:rival_brothers_victor
			}
		}
		if = {
			limit = {
				scope:rival_brothers_victor = {
					is_alive = yes
				}
			}
			if = {
				limit = {
					scope:rival_brothers_victor = {
						number_of_personality_traits < max_number_of_traits_svalue
						NOT = { has_trait = cruel }
					}
				}
				scope:rival_brothers_victor = { add_trait = cruel }
			}
			else = {
				scope:rival_brothers_victor = { add_popularity = subtract_popularity_medium }
			}
		}
	}
}

set_assassinate_malus_effect = {
	custom_tooltip = plot_becomes_more_unlikely
	if = {
		limit = {
			NOT = {
				has_local_variable = assassinate_malus
			}
		}
		set_local_variable = {
			name = assassinate_malus
			value = -25
		}
	}
	else = {
		change_local_variable = {
			name = assassinate_malus
			add = -25
		}
	}
}

appropriate_death_effect_assassination = {
	if = {
		limit = {
			local_var:death_method = 1
		}
		death = {
			death_reason = death_poisoning
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 2
		}
		death = {
			death_reason = death_stabbing
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 3
		}
		death = {
			death_reason = death_flayed_alive
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 4
		}
		death = {
			death_reason = death_impaled_on_battering_ram
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 5
		}
		death = {
			death_reason = death_crucified
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 6
		}
		death = {
			death_reason = death_garroted
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 7
		}
		death = {
			death_reason = death_bathing_accident
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 8
		}
		death = {
			death_reason = death_battering
		}
	}
	else_if = {
		limit = {
			local_var:death_method = 9
		}
		death = {
			death_reason = death_assassinated
		}
	}
	else = {
		death = {
			death_reason = death_assassinated
		}
	}
}

bastard_major_bloodline_effect = {
	if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = alcimachid
			}
		}
		add_trait = alcimachid
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = antigonids
			}
		}
		add_trait = antigonids
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = antipatrid
			}
		}
		add_trait = antipatrid
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = argeads
			}
		}
		add_trait = argeads
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = lagids
			}
		}
		add_trait = lagids
	}
	else_if = {
		limit = {
			scope:bastard_ruler = {
				has_trait = seleucids
			}
		}
		add_trait = seleucids
	}
}

remove_bastard_major_bloodline_effect = {
	if = {
		limit = { has_trait = alcimachid }
		add_trait = alcimachid
	}
	else_if = {
		limit = { has_trait = antigonids }
		add_trait = antigonids
	}
	else_if = {
		limit = { has_trait = antipatrid }
		add_trait = antipatrid
	}
	else_if = {
		limit = { has_trait = argeads }
		add_trait = argeads
	}
	else_if = {
		limit = { has_trait = lagids }
		add_trait = lagids
	}
	else_if = {
		limit = { has_trait = seleucids }
		add_trait = seleucids
	}
}

remove_friends_rivals_variables = {
	if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_destabilise
			}
		}
		scope:from_rival_ruler_country = {
			remove_variable = subject_interference_destabilise
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_incite
			}
		}
		scope:from_rival_ruler_country = {
			remove_variable = subject_interference_incite
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_dissent
			}
		}
		scope:from_rival_ruler_country = {
			remove_variable = subject_interference_dissent
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_friend
			}
		}
		scope:from_rival_ruler_country = {
			remove_variable = subject_interference_friend
		}
	}
}

dip_friends_rivals_23_tooltips = {
	if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_destabilise
			}
			is_subject = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at1
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_destabilise
			}
			is_overlord = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at2
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_incite
			}
			is_subject = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at3
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_incite
			}
			is_overlord = yes
		}
		scope:from_rival_ruler_country = {
			custom_tooltip = dip_friends_rivals.23.at4
		}
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_dissent
			}
			is_subject = yes
		}
		custom_tooltip = dip_friends_rivals.23.at5
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_dissent
			}
			is_overlord = yes
		}
		custom_tooltip = dip_friends_rivals.23.at6
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_friend
			}
			is_subject = yes
		}
		custom_tooltip = dip_friends_rivals.23.at7
	}
	else_if = {
		limit = {
			scope:from_rival_ruler_country = {
				has_variable = subject_interference_friend
			}
			is_overlord = yes
		}
		custom_tooltip = dip_friends_rivals.23.at8
	}
}

formable_capital_modifier_tribal_effect = {
	if = {
		limit = {
			NOT = {
				has_province_modifier = formable_capital_tribal_modifier
			}
		}
		add_province_modifier = {
			name = formable_capital_tribal_modifier
			duration = -1
		}
	}
}

formable_capital_modifier_normal_effect = {
	if = {
		limit = {
			has_province_modifier = formable_capital_tribal_modifier
		}
		remove_province_modifier = formable_capital_tribal_modifier
	}
	if = {
		limit = {
			NOT = {
				has_province_modifier = formable_capital_modifier
			}
		}
		add_province_modifier = {
			name = formable_capital_modifier
			duration = -1
		}
	}
}

formable_capital_modifier_large_effect = {
	if = {
		limit = {
			has_province_modifier = formable_capital_tribal_modifier
		}
		remove_province_modifier = formable_capital_tribal_modifier
	}
	if = {
		limit = {
			has_province_modifier = formable_capital_modifier
		}
		remove_province_modifier = formable_capital_modifier
	}
	if = {
		limit = {
			NOT = {
				has_province_modifier = formable_capital_huge_modifier
			}
		}
		add_province_modifier = {
			name = formable_capital_huge_modifier
			duration = -1
		}
	}
}

create_2_citizens_effect = {
	if = {
		limit = {
			owner = {	
				is_tribal = yes
			}
		}
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
	else = {
		create_state_pop = citizen
		create_state_pop = citizen
	}
}

create_deity_citizens_effect = {
	if = {
		limit = {
			scope:deified_ruler = { finesse > 8 }
		}
		create_2_citizens_effect = yes
		create_2_citizens_effect = yes
	}
	else_if = {
		limit = {
			scope:deified_ruler = { finesse > 5 }
		}
		create_2_citizens_effect = yes
	}
	else = {
		create_state_pop = citizen
	}
}

create_deity_freemen_effect = {
	if = {
		limit = {
			scope:deified_ruler = { finesse > 8 }
		}
		create_2_freemen_effect = yes
		create_2_freemen_effect = yes
	}
	else_if = {
		limit = {
			scope:deified_ruler = { finesse > 5 }
		}
		create_2_freemen_effect = yes
	}
	else = {
		create_state_pop = freemen
	}
}

create_deity_slaves_effect = {
	if = {
		limit = {
			scope:deified_ruler = { finesse > 8 }
		}
		create_2_slaves_effect = yes
		create_2_slaves_effect = yes
	}
	else_if = {
		limit = {
			scope:deified_ruler = { finesse > 5 }
		}
		create_2_slaves_effect = yes
	}
	else = {
		create_state_pop = slaves
	}
}

create_2_freemen_effect = {
	if = {
		limit = {
			owner = {	
				is_tribal = yes
			}
		}
		create_state_pop = tribesmen
		create_state_pop = tribesmen
	}
	else = {
		create_state_pop = freemen
		create_state_pop = freemen
	}
}

create_2_slaves_effect = {
	custom_tooltip = create_2_slaves_effect_tooltip
	hidden_effect = {
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

create_3_slaves_effect = {
	custom_tooltip = create_3_slaves_effect_tooltip
	hidden_effect = {
		create_state_pop = slaves
		create_state_pop = slaves
		create_state_pop = slaves
	}
}

create_2_tribesmen_effect = {
	create_state_pop = tribesmen
	create_state_pop = tribesmen
}

create_5_citizens_effect = {
	custom_tooltip = create_5_citizen_effect_tooltip
	hidden_effect = {
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
		create_state_pop = citizen
	}
}

add_relevant_subunit_effect = {
	if = {
		limit = {
			commander = {
				OR = {
					has_culture_group = east_levantine
					has_culture_group = south_levantine
					has_culture_group = numidian
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = camel
								trade_goods = camel
							}
						}
					}
				}
				add_subunit = camels
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
			25 = {
				add_subunit = light_infantry
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = heavy_cavalry
			}
		}
	}
	else_if = {
		limit = {
			commander = {
				OR = {
					has_culture_group = west_levantine
					has_culture_group = hellenic
					has_culture_group = latin
					has_culture_group = persia
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = light_infantry
			}
			30 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_subunit = heavy_infantry
			}
			20 = {
				add_subunit = archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants
								trade_goods = elephants
							}
						}
					}
				}
				add_subunit = warelephant
			}
		}
	}
	else_if = {
		limit = {
			commander = {
				OR = {
					has_culture_group = aryan
					has_culture_group = indian
					has_culture_group = tibetan
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = light_infantry
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_subunit = heavy_infantry
			}
			30 = {
				add_subunit = archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants
								trade_goods = elephants
							}
						}
					}
				}
				add_subunit = warelephant
			}
			20 = {
				add_subunit = chariots
			}
		}
	}
	else_if = {
		limit = {
			commander = {
				has_culture_group = scythia
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = light_infantry
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = heavy_cavalry
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_subunit = horse_archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
		}
	}
	else = {
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_subunit = chariots
			}
			20 = {
				add_subunit = light_infantry
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_subunit = light_cavalry
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_subunit = heavy_infantry
			}
		}
	}
}

add_relevant_loyal_subunit_effect = {
	if = {
		limit = {
			exists = commander
			commander = {
				OR = {
					has_culture_group = east_levantine
					has_culture_group = south_levantine
					has_culture_group = numidian
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = camel
								trade_goods = camel
							}
						}
					}
				}
				add_loyal_subunit = camels
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = light_cavalry
			}
			25 = {
				add_loyal_subunit = light_infantry
			}
			25 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = heavy_cavalry
			}
		}
	}
	else_if = {
		limit = {
			exists = commander
			commander = {
				OR = {
					has_culture_group = west_levantine
					has_culture_group = hellenic
					has_culture_group = latin
					has_culture_group = persia
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = light_infantry
			}
			30 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_loyal_subunit = heavy_infantry
			}
			20 = {
				add_loyal_subunit = archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = light_cavalry
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants
								trade_goods = elephants
							}
						}
					}
				}
				add_loyal_subunit = warelephant
			}
		}
	}
	else_if = {
		limit = {
			exists = commander
			commander = {
				OR = {
					has_culture_group = aryan
					has_culture_group = indian
					has_culture_group = tibetan
				}
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = light_infantry
			}
			10 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_loyal_subunit = heavy_infantry
			}
			30 = {
				add_loyal_subunit = archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = elephants
								trade_goods = elephants
							}
						}
					}
				}
				add_loyal_subunit = warelephant
			}
			20 = {
				add_loyal_subunit = chariots
			}
		}
	}
	else_if = {
		limit = {
			exists = commander
			commander = {
				has_culture_group = scythia
			}
		}
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = light_infantry
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = heavy_cavalry
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = steppe_horses
								trade_goods = steppe_horses
							}
						}
					}
				}
				add_loyal_subunit = horse_archers
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = light_cavalry
			}
		}
	}
	else_if = {
		limit = { exists = commander }
		commander = {
			add_gold = -20
		}
		random_list = {
			20 = {
				add_loyal_subunit = chariots
			}
			20 = {
				add_loyal_subunit = light_infantry
			}
			40 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = horses
								trade_goods = horses
							}
						}
					}
				}
				add_loyal_subunit = light_cavalry
			}
			20 = {
				trigger = {
					commander.employer = {
						any_owned_province = {
							OR = {
								is_importing_trade_good = iron
								trade_goods = iron
							}
						}
					}
				}
				add_loyal_subunit = heavy_infantry
			}
		}
	}
}

ip_mon_13_negative_trait_effect = {
	while = {
		limit = {
			var:ip_mon_13_trait_counter < 2
		}
		if = {
			limit = {
				has_trait = tactically_inflexible
			}
			remove_trait = tactically_inflexible
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = arbitrary
			}
			remove_trait = arbitrary
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = cruel
			}
			remove_trait = cruel
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = corrupt
			}
			remove_trait = corrupt
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = selfish
			}
			remove_trait = selfish
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			remove_trait = deceitful
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			remove_trait = lazy
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = foolish
			}
			remove_trait = foolish
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
		if = {
			limit = {
				has_trait = miserly
			}
			remove_trait = miserly
			change_variable = {
				name = ip_mon_13_trait_counter
				add = 1
			}
		}
	}
	remove_variable = ip_mon_13_trait_counter
}

dhe_slave_harsh_treatment_law_effect = {
	if = {
		limit = {
			is_republic = yes
			NOT = {
				tag = ROM
			}
		}
		change_law = republican_citizen_2
	}
	else_if = {
		limit = {
			is_republic = yes
			tag = ROM
		}
		change_law = lex_fufia_caninia
	}
}

republic_job_giver_effect = {
	if = {
		limit = {
			martial >= finesse
			martial >= charisma
			martial >= zeal
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_tribune_of_the_soldiers
						save_temporary_scope_as = officer_1
					}
				}
				martial >= scope:officer_1.martial
			}
			give_office = office_tribune_of_the_soldiers
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_tribune_of_the_treasury
						save_temporary_scope_as = officer_2
					}
				}
				martial >= scope:officer_2.martial
			}
			give_office = office_tribune_of_the_treasury
		}
		else = {
			random_list = {
				50 = {
					give_office = office_tribune_of_the_soldiers
				}
				50 = {
					give_office = office_tribune_of_the_treasury
				}
			}
		}
	}
	else_if = {
		limit = {
			finesse >= martial
			finesse >= charisma
			finesse >= zeal
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_plebeian_aedile
						save_temporary_scope_as = officer_3
					}
				}
				finesse >= scope:officer_3.finesse
			}
			give_office = office_plebeian_aedile
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_republic_physician
						save_temporary_scope_as = officer_4
					}
				}
				finesse >= scope:officer_4.finesse
			}
			give_office = office_republic_physician
		}
		else = {
			random_list = {
				50 = {
					give_office = office_plebeian_aedile
				}
				50 = {
					give_office = office_republic_physician
				}
			}
		}
	}
	else_if = {
		limit = {
			charisma >= martial
			charisma >= finesse
			charisma >= zeal
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_censor
						save_temporary_scope_as = officer_5
					}
				}
				charisma >= scope:officer_5.charisma
			}
			give_office = office_censor
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_praetor
						save_temporary_scope_as = officer_6
					}
				}
				charisma >= scope:officer_6.charisma
			}
			give_office = office_praetor
		}
		else = {
			random_list = {
				50 = {
					give_office = office_censor
				}
				50 = {
					give_office = office_praetor
				}
			}
		}
	}
	else_if = {
		limit = {
			zeal >= martial
			zeal >= finesse
			zeal >= charisma
		}
		if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_augur
						save_temporary_scope_as = officer_7
					}
				}
				zeal >= scope:officer_7.zeal
			}
			give_office = office_augur
		}
		else_if = {
			limit = {
				employer = {
					any_character = {
						has_office = office_pontifex
						save_temporary_scope_as = officer_8
					}
				}
				zeal >= scope:officer_8.zeal
			}
			give_office = office_pontifex
		}
		else = {
			random_list = {
				50 = {
					give_office = office_augur
				}
				50 = {
					give_office = office_pontifex
				}
			}
		}
	}
	else = {
		random_list = {
			1 = {
				give_office = office_tribune_of_the_soldiers
			}
			1 = {
				give_office = office_tribune_of_the_treasury
			}
			1 = {
				give_office = office_plebeian_aedile
			}
			1 = {
				give_office = office_republic_physician
			}
			1 = {
				give_office = office_censor
			}
			1 = {
				give_office = office_praetor
			}
			1 = {
				give_office = office_augur
			}
			1 = {
				give_office = office_pontifex
			}
		}
	}
}

add_trial_chance_small = {
	custom_tooltip = office_trial_success_chance_future_small
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = 5
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = 5
		}
	}
}

add_trial_chance_moderate = {
	custom_tooltip = office_trial_success_chance_future_moderate
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = 10
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = 10
		}
	}
}

add_trial_chance_large = {
	custom_tooltip = office_trial_success_chance_future_large
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = 20
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = 20
		}
	}
}

subtract_trial_chance_small = {
	custom_tooltip = office_trial_success_chance_subtract_small
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = -5
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = -5
		}
	}
}

subtract_trial_chance_moderate = {
	custom_tooltip = office_trial_success_chance_subtract_moderate
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = -10
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = -10
		}
	}
}

subtract_trial_chance_large = {
	custom_tooltip = office_trial_success_chance_subtract_large
	if = {
		limit = {
			NOT = {
				has_variable = trial_chance_modifier
			}
		}
		set_variable = {
			name = trial_chance_modifier
			value = -20
		}
	}
	else = {
		change_variable = {
			name = trial_chance_modifier
			add = -20
		}
	}
}

add_civil_war_chance_effect = {
	if = {
		limit = {
			NOT = {
				has_local_variable = civil_war_chance
			}
		}
		set_local_variable = {
			name = civil_war_chance
			value = 20
		}
	}
	else = {
		change_local_variable = {
			name = civil_war_chance
			add = 20
		}
	}
}

trial_step_effect = {
	if = {
		limit = {
			NOT = {
				has_local_variable = trial_counter
			}
		}
		set_local_variable = {
			name = trial_counter
			value = 1
		}
	}
	else = {
		change_local_variable = {
			name = trial_counter
			add = 1
		}
	}
	if = {
		limit = {
			has_local_variable = trial_counter
			local_var:trial_counter >= 3
		}
		trigger_event = {
			on_action = trial_end
		}
	}
	else = {
		trigger_event = {
			on_action = trial_step
		}
	}
}

remove_trial_items_effect = {
	if = {
		limit = {
			has_triggered_character_modifier = currently_on_trial
		}
		remove_triggered_character_modifier = currently_on_trial
	}
	if = {
		limit = {
			has_variable = trial_chance_modifier
		}
		remove_variable = trial_chance_modifier
	}
}

remove_brothers_variables_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_variable = rival_brother_assassin_cooldown
			}
			remove_variable = rival_brother_assassin_cooldown
		}
		if = {
			limit = {
				has_variable = rival_brother_duel_cooldown
			}
			remove_variable = rival_brother_duel_cooldown
		}
		if = {
			limit = {
				has_variable = rival_brother_duel_cooldown
			}
			remove_variable = rival_brother_duel_cooldown
		}
		if = {
			limit = {
				has_variable = rival_brothers_death
			}
			remove_variable = rival_brothers_death
		}
		if = {
			limit = {
				has_variable = rival_brothers_wound
			}
			remove_variable = rival_brothers_wound
		}
		scope:rival_brothers_victor = {
			clear_saved_scope = rival_brothers_victor
		}
		scope:rival_brothers_loser = {
			clear_saved_scope = rival_brothers_loser
		}
	}
}

ip_mon_42_end_plot_effect = {
	custom_tooltip = end_plot_chain_tooltip
	if = {
		limit = {
			has_variable = ongoing_plot
		}
		remove_variable = ongoing_plot
	}
	if = {
		limit = {
			has_variable = ip_mon_42_investigation
		}
		remove_variable = ip_mon_42_investigation
	}
	if = {
		limit = {
			has_variable = ip_mon_42_doubled_guard
		}
		remove_variable = ip_mon_42_doubled_guard
	}
	if = {
		limit = {
			has_variable = ip_mon_42_red_handed
		}
		remove_variable = ip_mon_42_red_handed
	}
	if = {
		limit = {
			has_variable = ip_mon_42_elevated_pretender
		}
		remove_variable = ip_mon_42_elevated_pretender
	}
}

ip_mon_54_end_plot_effect = {
	custom_tooltip = end_plot_chain_tooltip
	if = {
		limit = {
			has_variable = ongoing_plot
		}
		remove_variable = ongoing_plot
	}
	if = {
		limit = {
			has_variable = ip_mon_54_investigation
		}
		remove_variable = ip_mon_54_investigation
	}
	if = {
		limit = {
			has_variable = ip_mon_54_ensure
		}
		remove_variable = ip_mon_54_ensure
	}
	if = {
		limit = {
			has_variable = ip_mon_54_ruler_resolution_ruler
		}
		remove_variable = ip_mon_54_ruler_resolution_ruler
	}
	if = {
		limit = {
			has_variable = ip_mon_54_ruler_resolution_consort
		}
		remove_variable = ip_mon_54_ruler_resolution_consort
	}
}

remove_regent_modifier_effect = {
	if = {
		limit = {
			has_character_modifier = martial_regent_1_charmod
		}
		remove_character_modifier = martial_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = martial_regent_2_charmod
		}
		remove_character_modifier = martial_regent_2_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = finesse_regent_1_charmod
		}
		remove_character_modifier = finesse_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = finesse_regent_2_charmod
		}
		remove_character_modifier = finesse_regent_2_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = charisma_regent_1_charmod
		}
		remove_character_modifier = charisma_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = charisma_regent_2_charmod
		}
		remove_character_modifier = charisma_regent_2_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = zeal_regent_1_charmod
		}
		remove_character_modifier = zeal_regent_1_charmod
	}
	else_if = {
		limit = {
			has_character_modifier = zeal_regent_2_charmod
		}
		remove_character_modifier = zeal_regent_2_charmod
	}
}

demand_office_skill_effect = {
	if = {
		limit = {
			scope:demand_office_event_scope.martial >= scope:demand_office_event_scope.finesse
			scope:demand_office_event_scope.martial >= scope:demand_office_event_scope.charisma
			scope:demand_office_event_scope.martial >= scope:demand_office_event_scope.zeal
		}
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 1
			}
		}
	}
	else_if = {
		limit = {
			scope:demand_office_event_scope.finesse >= scope:demand_office_event_scope.martial
			scope:demand_office_event_scope.finesse >= scope:demand_office_event_scope.charisma
			scope:demand_office_event_scope.finesse >= scope:demand_office_event_scope.zeal
		}
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 2
			}
		}
	}
	else_if = {
		limit = {
			scope:demand_office_event_scope.charisma >= scope:demand_office_event_scope.martial
			scope:demand_office_event_scope.charisma >= scope:demand_office_event_scope.finesse
			scope:demand_office_event_scope.charisma >= scope:demand_office_event_scope.zeal
		}
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 3
			}
		}
	}
	else = {
		scope:demand_office_event_scope = {
			set_variable = {
				name = demand_office_skill
				value = 4
			}
		}
	}
}

demand_office_military_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_marshal
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_marshal
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_master_of_the_guard
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_master_of_the_guard
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_marshal
				}
			}
			random_character = {
				limit = {
					has_office = office_marshal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_master_of_the_guard

				}
			}
			random_character = {
				limit = {
					has_office = office_master_of_the_guard
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_treasury
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_treasury
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_soldiers
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_soldiers
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_treasury
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_treasury
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_tribune_of_the_soldiers
				}
			}
			random_character = {
				limit = {
					has_office = office_tribune_of_the_soldiers
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_warchief
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_warchief
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_bodyguard
					martial <= scope:demand_office_event_scope.martial
				}
			}
			random_character = {
				limit = {
					has_office = office_bodyguard
					martial <= scope:demand_office_event_scope.martial
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_warchief
				}
			}
			random_character = {
				limit = {
					has_office = office_warchief
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_bodyguard
				}
			}
			random_character = {
				limit = {
					has_office = office_bodyguard
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_finesse_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_steward
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_steward
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_physician
				}
			}
			random_character = {
				limit = {
					has_office = office_physician
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_steward
				}
			}
			random_character = {
				limit = {
					has_office = office_steward
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_plebeian_aedile
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_plebeian_aedile
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_republic_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_republic_physician
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_plebeian_aedile
				}
			}
			random_character = {
				limit = {
					has_office = office_plebeian_aedile
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_republic_physician
				}
			}
			random_character = {
				limit = {
					has_office = office_republic_physician
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_apothecary
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_apothecary
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_magistrate
					finesse <= scope:demand_office_event_scope.finesse
				}
			}
			random_character = {
				limit = {
					has_office = office_magistrate
					finesse <= scope:demand_office_event_scope.finesse
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_apothecary
				}
			}
			random_character = {
				limit = {
					has_office = office_apothecary
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_magistrate
				}
			}
			random_character = {
				limit = {
					has_office = office_magistrate
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_charisma_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_royal_tutor
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_royal_tutor
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_foreign_minister
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_foreign_minister
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_royal_tutor
				}
			}
			random_character = {
				limit = {
					has_office = office_royal_tutor
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_foreign_minister
				}
			}
			random_character = {
				limit = {
					has_office = office_foreign_minister
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_praetor
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_praetor
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_censor
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_censor
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_praetor
				}
			}
			random_character = {
				limit = {
					has_office = office_praetor
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_censor
				}
			}
			random_character = {
				limit = {
					has_office = office_censor
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_arbitrator
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_arbitrator
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_elder
					charisma <= scope:demand_office_event_scope.charisma
				}
			}
			random_character = {
				limit = {
					has_office = office_elder
					charisma <= scope:demand_office_event_scope.charisma
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_arbitrator
				}
			}
			random_character = {
				limit = {
					has_office = office_arbitrator
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_elder
				}
			}
			random_character = {
				limit = {
					has_office = office_elder
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_zeal_scope_effect = {
	if = {
		limit = {
			is_monarchy = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_philosopher
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_philosopher
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest_monarchy
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest_monarchy
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_philosopher
				}
			}
			random_character = {
				limit = {
					has_office = office_philosopher
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest_monarchy
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest_monarchy
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else_if = {
		limit = {
			is_republic = yes
		}
		if = {
			limit = {
				any_character = {
					has_office = office_augur
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_augur
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_pontifex
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_pontifex
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_augur
				}
			}
			random_character = {
				limit = {
					has_office = office_augur
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_pontifex
				}
			}
			random_character = {
				limit = {
					has_office = office_pontifex
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character = {
					has_office = office_wise_person
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_wise_person
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest
					zeal <= scope:demand_office_event_scope.zeal
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest
					zeal <= scope:demand_office_event_scope.zeal
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_wise_person
				}
			}
			random_character = {
				limit = {
					has_office = office_wise_person
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_office = office_high_priest
				}
			}
			random_character = {
				limit = {
					has_office = office_high_priest
				}
				save_scope_as = demand_office_old_officer_scope
			}
		}
	}
}

demand_office_master_scope_effect = {
	if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
		demand_office_military_scope_effect = yes
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
		demand_office_finesse_scope_effect = yes
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
		demand_office_charisma_scope_effect = yes
	}
	else = { demand_office_zeal_scope_effect = yes }
}

demand_office_transfer_effect = {
	hidden_effect = {
		scope:demand_office_event_scope = { remove_all_positions = yes }
	}
	if = {
		limit = { is_monarchy = yes }
		if = {
			limit = {
				exists = scope:demand_office_old_officer_scope
			}
			if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_foreign_minister
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_foreign_minister
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_royal_tutor
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_royal_tutor
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_marshal
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_marshal
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_master_of_the_guard
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_master_of_the_guard
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_high_priest_monarchy
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_high_priest_monarchy
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_philosopher
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_philosopher
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_steward
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_steward
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_physician
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_physician
				}
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_marshal
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_physician
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_royal_tutor
			}
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_philosopher
			}
		}
	}
	else_if = {
		limit = { is_republic = yes }
		if = {
			limit = {
				exists = scope:demand_office_old_officer_scope
			}
			if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_censor
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_censor
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_praetor
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_praetor
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_tribune_of_the_soldiers
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_tribune_of_the_soldiers
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_tribune_of_the_treasury
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_tribune_of_the_treasury
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_augur
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_augur
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_pontifex
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_pontifex
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_plebeian_aedile
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_plebeian_aedile
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_republic_physician
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_republic_physician
				}
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_tribune_of_the_treasury
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_plebeian_aedile
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_praetor
			}
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_augur
			}
		}
	}
	else = {
		if = {
			limit = {
				exists = scope:demand_office_old_officer_scope
			}
			if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_arbitrator
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_arbitrator
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_elder
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_elder
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_warchief
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_warchief
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_bodyguard
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_bodyguard
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_high_priest
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_high_priest
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_wise_person
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_wise_person
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_magistrate
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_magistrate
				}
			}
			else_if = {
				limit = {
					scope:demand_office_old_officer_scope = {
						has_office = office_apothecary
					}
				}
				hidden_effect = {
					scope:demand_office_old_officer_scope = {
						remove_all_positions = yes
					}
				}
				scope:demand_office_event_scope = {
					give_office = office_apothecary
				}
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_warchief
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_apothecary
			}
		}
		else_if = {
			limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_arbitrator
			}
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						exists = scope:demand_office_old_officer_scope
					}
					scope:demand_office_old_officer_scope = { remove_all_positions = yes }
				}
			}
			scope:demand_office_event_scope = {
				give_office = office_wise_person
			}
		}
	}
}

demand_office_skill_tooltip_effect = {
	if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 1 }
		custom_tooltip = scheme.8.martialtooltip
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 2 }
		custom_tooltip = scheme.8.finessetooltip
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 3 }
		custom_tooltip = scheme.8.charismatooltip
	}
	else_if = {
		limit = { scope:demand_office_event_scope.var:demand_office_skill = 4 }
		custom_tooltip = scheme.8.zealtooltip
	}
}

###Influence chain

add_influence_military_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 3
		}
	}
}

add_influence_military_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 4
		}
	}
}

add_influence_military_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 5
		}
	}
}

add_influence_military_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.martial
			multiply = 6
		}
	}
}

add_influence_civic_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 3
		}
	}
}

add_influence_civic_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 4
		}
	}
}

add_influence_civic_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 5
		}
	}
}

add_influence_civic_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.finesse
			multiply = 6
		}
	}
}

add_influence_oratory_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 3
		}
	}
}

add_influence_oratory_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 4
		}
	}
}

add_influence_oratory_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 5
		}
	}
}

add_influence_oratory_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.charisma
			multiply = 6
		}
	}
}

add_influence_religious_reward_small = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 3
		}
	}
}

add_influence_religious_reward_medium = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 4
		}
	}
}

add_influence_religious_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 5
		}
	}
}

add_influence_religious_reward_huge = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.zeal
			multiply = 6
		}
	}
}

add_influence_reward_large = {
	employer = {
		add_political_influence = {
			value = scope:ongoing_scheme_target.total_stats_svalue
		}
	}
}

mon_18_mad_melee_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = scope:mon_18_plotter_2
				exists = scope:mon_18_plotter_3
			}
			random_list = { #Outcome of mad melee
				33 = {
					scope:mon_18_plotter = { # Plotter 1 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:mon_18_plotter_2 = { # Plotter 2 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:mon_18_plotter_3 = { # Plotter 3 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:old_ruler_mon_18 = { # Ruler dies
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
				1 = {
					scope:mon_18_plotter = { # Everybody dies...
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:mon_18_plotter_2 = {
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:mon_18_plotter_3 = {
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:old_ruler_mon_18 = {
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
			}
			if = { # If ruler didn't die imprison
				limit = {
					scope:old_ruler_mon_18 = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:old_ruler_mon_18
				}
			}
			if = { # If plotter 1 didn't die seize power
				limit = {
					scope:mon_18_plotter = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter
			}
			else_if = { # If plotter 1 did die plotter 2 seize power
				limit = {
					scope:mon_18_plotter_2 = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter_2
			}
			else_if = { # If plotter 1 and 2 died plotter 3 seize power
				limit = {
					scope:mon_18_plotter_3 = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter_3
			}
			else_if = { # If all died, old ruler preferred heir takes power
				limit = {
					exists = scope:mon_18_preferred_heir
					scope:mon_18_preferred_heir = {
						is_alive = yes
						employer = root
					}
				}
				set_as_ruler = scope:mon_18_preferred_heir
			}
		}
		else_if = {
			limit = {
				exists = scope:mon_18_plotter_2
				NOT = { exists = scope:mon_18_plotter_3 }
			}
			random_list = { #Outcome of mad melee
				33 = {
					scope:mon_18_plotter = { # Plotter 1 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:mon_18_plotter_2 = { # Plotter 2 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:old_ruler_mon_18 = { # Ruler dies
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
				1 = {
					scope:mon_18_plotter = { # Everybody dies...
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:mon_18_plotter_2 = {
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:old_ruler_mon_18 = {
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
			}
			if = { # If ruler didn't die imprison
				limit = {
					scope:old_ruler_mon_18 = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:old_ruler_mon_18
				}
			}
			if = { # If plotter 1 didn't die seize power
				limit = {
					scope:mon_18_plotter = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter
			}
			else_if = { # If plotter 1 did die plotter 2 seize power
				limit = {
					scope:mon_18_plotter_2 = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter_2
			}
			else_if = { # If all died, old ruler preferred heir takes power
				limit = {
					exists = scope:mon_18_preferred_heir
					scope:mon_18_preferred_heir = {
						is_alive = yes
						employer = root
					}
				}
				set_as_ruler = scope:mon_18_preferred_heir
			}
		}
		else = {
			random_list = { #Outcome of mad melee
				33 = {
					scope:mon_18_plotter = { # Plotter 1 dies
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
				}
				33 = {
					scope:old_ruler_mon_18 = { # Ruler dies
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
				1 = {
					scope:mon_18_plotter = { # Everybody dies...
						death = {
							death_reason = death_battle
							killer = scope:old_ruler_mon_18
						}
					}
					scope:old_ruler_mon_18 = {
						death = {
							death_reason = death_battle
							killer = scope:mon_18_plotter
						}
					}
				}
			}
			if = { # If ruler didn't die imprison
				limit = {
					scope:old_ruler_mon_18 = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:old_ruler_mon_18
				}
			}
			if = { # If plotter 1 didn't die seize power
				limit = {
					scope:mon_18_plotter = {
						is_alive = yes
					}
				}
				set_as_ruler = scope:mon_18_plotter
			}
			else_if = { # If all died, old ruler preferred heir takes power
				limit = {
					exists = scope:mon_18_preferred_heir
					scope:mon_18_preferred_heir = {
						is_alive = yes
						employer = root
					}
				}
				set_as_ruler = scope:mon_18_preferred_heir
			}
		}
	}
}

pytheas_success_calculator_effect = {
	hidden_effect = {
		random_list = {
			20 = { # Success
				if = {
					limit = {
						var:pytheas_destination_flag = 1
					}
					every_country = {
						limit = {
							is_ai = no
							capital_scope = {
								is_in_region = britain_region
							}
							any_owned_province = {
								is_coastal = yes
							}
						}
						trigger_event = {
							id = dhe_massalia.17
							days = { 80 100 }	
						}
					}
				}
				if = {
					limit = {
						var:pytheas_destination_flag = 2
					}
					every_country = {
						limit = {
							is_ai = no
							capital_scope = {
								is_in_region = scandinavia_region
							}
							any_owned_province = {
								is_coastal = yes
							}
						}
						trigger_event = {
							id = dhe_massalia.17
							days = { 80 100 }	
						}
					}
				}
				if = {
					limit = {
						var:pytheas_destination_flag <= 3
					}
					trigger_event = {
						on_action = pytheas_return_on_action
						days = { 180 240 }
					}
				}
				else_if = {
					limit = {
						var:pytheas_destination_flag = 4
					}
					trigger_event = {
						on_action = pytheas_return_on_action
						days = { 500 720 }
					}
				}
			}
			5 = { # Failure
				modifier = {
					factor = 10
					var:pytheas_destination_flag = 2
				}
				modifier = {
					factor = 15
					var:pytheas_destination_flag = 3
				}
				modifier = {
					factor = 99
					var:pytheas_destination_flag = 4
				}
				random_list = {
					35 = {
						set_variable = {
							name = pytheas_failure_flag
							value = 0
						}
						random_list = {
							10 = {
								change_variable = {
									name = pytheas_failure_flag
									add = 1
								}
							}
							10 = {
								trigger = {
									c:CAR = { 
										is_ai = yes
										has_land = yes
									}
								}
								change_variable = {
									name = pytheas_failure_flag
									add = 2
								}
							}
							10 = {
								change_variable = {
									name = pytheas_failure_flag
									add = 3
								}
							}
							10 = {
								change_variable = {
									name = pytheas_failure_flag
									add = 4
								}
							}
						}
						trigger_event = {
							on_action = pytheas_return_on_action
							days = { 30 90 }
						}
					}
					65 = {
						modifier = {
							factor = 100
							var:pytheas_destination_flag = 4
						}
						trigger_event = {
							id = dhe_massalia.9
							days = { 180 270 }
						}
					}
				}
			}
		}
	}
}

pytheas_failure_effect = {
	if = {
		limit = {
			var:pytheas_failure_flag = 1 # Pirates
		}
	}
	else_if = {
		limit = {
			var:pytheas_failure_flag = 2 # Carthage
		}
	}
	else_if = {
		limit = {
			var:pytheas_failure_flag = 3 # Shipwreck
		}
	}
	else_if = {
		limit = {
			var:pytheas_failure_flag = 4 # Incompetence
		}
	}
	remove_variable = pytheas_failure_flag
	remove_variable = pytheas_destination_flag
}

party_conviction_character_party = {
	if = {
		limit = {
			$CHARACTER$ = {
				party = military_party
			}
		}
		add_party_conviction = {
			party = military_party
			value = 10
		}
	}
	else_if = {
		limit = {
			$CHARACTER$ = {
				party = civic_party
			}
		}
		add_party_conviction = {
			party = civic_party
			value = 10
		}
	}
	else_if = {
		limit = {
			$CHARACTER$ = {
				party = mercantile_party
			}
		}
		add_party_conviction = {
			party = mercantile_party
			value = 10
		}
	}
	else_if = {
		limit = {
			$CHARACTER$ = {
				party = religious_party
			}
		}
		add_party_conviction = {
			party = religious_party
			value = 10
		}
	}
	else_if = {
		limit = {
			$CHARACTER$ = {
				party = populist_party
			}
		}
		add_party_conviction = {
			party = populist_party
			value = 10
		}
	}
}

ip_rep_66_variable_effect = {
	if = { 
		limit = { has_variable = ip_rep_66_68 }
		remove_variable = ip_rep_66_68
	}
	if = { 
		limit = { has_variable = ip_rep_66_69 }
		remove_variable = ip_rep_66_69
	}
	if = { 
		limit = { has_variable = ip_rep_66_72 }
		remove_variable = ip_rep_66_72
	}
	if = { 
		limit = { has_variable = ip_rep_66_80 }
		remove_variable = ip_rep_66_80
	}
	if = { 
		limit = { has_variable = ip_rep_66_counter_support }
		remove_variable = ip_rep_66_counter_support
	}
	if = { 
		limit = { has_variable = ip_rep_66_plot_support }
		remove_variable = ip_rep_66_plot_support
	}
	if = {
		limit = { has_variable = ip_rep_66_evidence_uncovered_flag }
		remove_variable = ip_rep_66_evidence_uncovered_flag
	}
	if = {
		limit = {
			any_character = { has_variable = ip_rep_66_supporter_flag }
		}
		every_character = {
			limit = {
				has_variable = ip_rep_66_supporter_flag
			}
			remove_variable = ip_rep_66_supporter_flag
		}
	}
	if = {
		limit = {
			any_character = { has_variable = ip_rep_66_counter_flag }
		}
		every_character = {
			limit = {
				has_variable = ip_rep_66_counter_flag
			}
			remove_variable = ip_rep_66_counter_flag
		}
	}
	if = {
		limit = { has_variable = ip_rep_66_fled }
		remove_variable = ip_rep_66_fled
	}
}

replace_food_after_city_upgrade_effect = {
	# $VARIABLE_OR_SET_TRADE_GOODS$ will make this either set a variable for which trade good or actually change it. The later is only used to show a tooltip on the button but this is kept as one effect to make sure functionality is always the same between tooltip and outcome.
	#The actual trade good change is done in the event state_improvement.6
	random_list = { #If set_variable is used it must be cleared, use the scripted effect after!
		5 = {
			modifier = {
				factor = 2
				OR = {
					is_in_region = upper_egypt_region
					is_in_region = lower_egypt_region
				}
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = papyrus
		}
		15 = { #Always pretty high chance
			$VARIABLE_OR_SET_TRADE_GOODS$ = cloth
			modifier = {
				factor = 1.5
				OR = {
					is_in_region = gandhara_region
					is_in_region = maru_region
					is_in_region = avanti_region
					is_in_region = madhyadesa_region
					is_in_region = pracya_region
					is_in_region = vindhyaprstha_region
					is_in_region = dravida_region
					is_in_region = aparanta_region
					is_in_region = karnata_region
				}
			}
		}
		10 = { #Often high chance
			modifier = {
				factor = 2
				OR = {
					terrain = marsh
					terrain = desert
				}
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = earthware
		}
		10 = {
			modifier = {
				factor = 2
				terrain = marsh
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = dye
		}
		5 = { #Unusual but not very dependent on where you are
			$VARIABLE_OR_SET_TRADE_GOODS$ = glass
		}
		10 = { #Only in certain regions
			modifier = {
				factor = 0
				NOT = { is_in_region = asia_region }
				NOT = { is_in_region = greece_region }
				NOT = { is_in_region = cilicia_region }
				NOT = { is_in_region = assyria_region }
				NOT = { is_in_region = mesopotamia_region }
				NOT = { is_in_region = persis_region }
				NOT = { is_in_region = media_region }
				NOT = { is_in_region = bactriana_region }
				NOT = { is_in_region = ariana_region }
				NOT = { is_in_region = parthia_region }
				NOT = { is_in_region = syria_region }
				NOT = { is_in_region = palestine_region }
				NOT = { is_in_region = gandhara_region }
				NOT = { is_in_region = avanti_region }
				NOT = { is_in_region = madhyadesa_region }
				NOT = { is_in_region = pracya_region }
				NOT = { is_in_region = vindhyaprstha_region }
				NOT = { is_in_region = dravida_region }
				NOT = { is_in_region = aparanta_region }
				NOT = { is_in_region = karnata_region }
				NOT = { is_in_region = sogdiana_region }
				NOT = { is_in_region = lower_egypt_region }
			}
			modifier = {
				factor = 0.2
				OR = {
					is_in_region = asia_region
					is_in_region = greece_region
					is_in_region = cilicia_region
					is_in_region = syria_region
					is_in_region = palestine_region
					is_in_region = lower_egypt_region
				}
			}
			$VARIABLE_OR_SET_TRADE_GOODS$ = silk
		}
	}
}

replace_food_after_city_upgrade_finish_effect = {
	switch = {
		trigger = has_variable
		papyrus = { set_trade_goods = papyrus remove_variable = papyrus }
		cloth = { set_trade_goods = cloth remove_variable = cloth }
		earthware = { set_trade_goods = earthware remove_variable = earthware }
		dye = { set_trade_goods = dye remove_variable = dye }
		glass = { set_trade_goods = glass remove_variable = glass }
		silk = { set_trade_goods = silk remove_variable = silk }
	}
}

restore_food_effect = {
	switch = {
		trigger = has_variable
		had_grain = { set_trade_goods = grain remove_variable = had_grain }
		had_fish = { set_trade_goods = fish remove_variable = had_fish }
		had_cattle = { set_trade_goods = cattle remove_variable = had_cattle }
		had_vegetables = { set_trade_goods = vegetables remove_variable = had_vegetables  }
	}
}

famine_relocation_immediate_effect = {
	if = {
		limit = {
			scope:fe_city.state = {
				any_state_province = {
					any_neighbor_province = {
						NOT = { is_in_area = scope:fe_city }
						owner = root
						this.state = {
							NOR = {
								any_state_province = { has_variable = food_event_cooldown_state }
								has_state_modifier = mild_famine_smod
								has_state_modifier = severe_famine_smod
								has_state_modifier = severe_famine_relief_smod
							}
						}
						save_temporary_scope_as = relocation_temp
						scope:relocation_temp.state = {
							any_state_province = {
								count >= 3 
								owner = root
								total_population < population_cap
							}
						}
					}
				}
			}
		}
		if = { 
			limit = { has_variable = famine_relocation_number }
			remove_variable = famine_relocation_number
		}
		set_variable = {
			name = famine_relocation_number
			value = {
				scope:fe_city.state = {
					every_state_province = {
						limit = {
							owner = root
						}
						every_pops_in_province = {
							add = 1
						}
					}
				}
				divide = 10
				round = yes
			}
		}
		scope:fe_city.state = {
			random_state_province = {
				limit = {
					any_neighbor_province = {
						NOT = { is_in_area = scope:fe_city }
						owner = root
						save_temporary_scope_as = relocation_temp
						scope:relocation_temp.state = {
							any_state_province = {
								count >= 3 
								owner = root
							}
						}
					}
				}
				random_neighbor_province = {
					limit = {
						NOT = { is_in_area = scope:fe_city }
						owner = root
						save_temporary_scope_as = relocation_temp
						scope:relocation_temp.state = {
							any_state_province = {
								count >= 3 
								owner = root
							}
						}
					}
					weight = {
						modifier = {
							factor = 5 
							state.has_state_food >= 400
						}
						modifier = {
							factor = 10
							state.has_state_food >= 800
						}
						modifier = {
							factor = 15
							state.has_state_food >= 1000
						}
						modifier = {
							factor = 20 
							state.has_state_food >= 1200
						}
					}
					save_scope_as = relocation_state_city
				}
			}
		}
	}
}

famine_relocation_effect = {
	while = {
		limit = {
			var:famine_relocation_number > 0
		}
		scope:fe_city.state = {
			random_state_province = {
				limit = {
					owner = scope:fe_city.owner
					total_population > 1
				}
				weight = {
					modifier = {
						factor = 5
						has_city_status = no	
					}
					modifier = {
						factor = 5
						any_pops_in_province = {
							NOT = { pop_type = slaves } 
						}
					}
					modifier = {
						factor = 5
						any_pops_in_province = {
							NOT = { pop_type = tribesmen } 
						}
					}
					modifier = {
						factor = 5
						total_population >= population_cap
					}
				}
				save_scope_as = relocating_city
			}
			scope:relocation_state_city.state = {
				random_state_province = {
					limit = {
						owner = scope:fe_city.owner
					}
					weight = {
						base = 1
						modifier = {
							factor = 5
							has_city_status = yes
						}
						modifier = {
							factor = 5
							total_population >= 10	
						}
						modifier = {
							factor = 20
							NOT = { total_population >= population_cap }
						}
					}
					save_scope_as = relocation_city
				}
			}
		}
		scope:relocating_city = {
			random_pops_in_province = {
				weight = {
					modifier = {
						factor = 10
						NOT = { pop_type = slaves }
					} 
					modifier = {
						factor = 5
						NOT = { pop_type = tribesmen }
					} 
				}
				move_pop = scope:relocation_city
			}
		}
		change_variable = {
			name = famine_relocation_number
			subtract = 1
		}
	}
	remove_variable = famine_relocation_number
}

add_peaceful_weight_effect = {
	custom_tooltip = "peaceful_weight_up_tt"
	if = {
		limit = {
			NOT = {
				has_variable = mission_stance_weight #TODO make local variable
			}
		}
		set_variable = {
			name = mission_stance_weight
			value = 1
		}
	}
	else = {
		change_variable = {
			name = mission_stance_weight
			add = 1
		}
	}
}

add_warlike_weight_effect = {
	custom_tooltip = "warlike_weight_up_tt"
	if = {
		limit = {
			NOT = {
				has_variable = mission_stance_weight #TODO make local variable
			}
		}
		set_variable = {
			name = mission_stance_weight
			value = -1
		}
	}
	else = {
		change_variable = {
			name = mission_stance_weight
			subtract = 1
		}
	}
}

destroy_generic_mission_variables_effect = {
	if = {
		limit = {
			has_variable = mission_stance_weight
		}
		remove_variable = mission_stance_weight
	}
	if = {
		limit = {
			has_variable = generic_mission_1_toggle
		}
		remove_variable = generic_mission_1_toggle
	}
	if = {
		limit = {
			has_variable = generic_mission_2_toggle
		}
		remove_variable = generic_mission_2_toggle
	}
	if = {
		limit = {
			has_variable = reward_roll
		}
		remove_variable = reward_roll
	}
	if = {
		limit = {
			has_variable = side_branch_selector
		}
		remove_variable = side_branch_selector
	}
}

save_iterative_scope_effect = { # up to 10 targets, this is a typeless effect
	if = {
		limit = {
			NOT = {
				exists = scope:first
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = first
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:first
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:second
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = second
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:second
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:third
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = third
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:third
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:fourth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = fourth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:fourth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:fifth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = fifth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:fifth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:sixth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = sixth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:sixth
			}
		}
	} 
	else_if = {
		limit = {
			NOT = {
				exists = scope:seventh
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = seventh
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:seventh
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:eighth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = eighth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:eighth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:ninth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = ninth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:ninth
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				exists = scope:tenth
			}
			not_exists_already_iter_trigger = yes
		}
		save_scope_as = tenth
		root = {
			add_to_variable_list = {
				name = iter
				target = scope:tenth
			}
		}
	}
}

add_provincial_claim_effect = {
	random_area_province = {
		custom_tooltip = add_provincial_claim_effect_tooltip
	}
	hidden_effect = {
		every_area_province = {
			limit = {
				NOT = {
					owner = root
				}
				has_owner = yes
			}
			add_claim = root
		}
	}
}

destroy_building_effect = {
	save_scope_as = destroy_random_building_scope
	if = {
		limit = { has_city_status = no }
		if = { 
			limit = { num_of_farming_settlement_building > 0 }
			remove_building_level = farming_settlement_building
		}
		else_if = {
			limit = { num_of_noble_estate_building > 0 }
			remove_building_level = noble_estate_building
		}
		else_if = {
			limit = { num_of_mining_settlement_building > 0 }
			remove_building_level = mining_settlement_building
		}
		else_if = {
			limit = { num_of_fishing_settlement_building > 0 }
			remove_building_level = fishing_settlement_building
		}
		else_if = {
			limit = { num_of_town_settlement_building > 0 }
			remove_building_level = town_settlement_building
		}
		else_if = {
			limit = { num_of_barracks_building > 0 }
			remove_building_level = barracks_building
		}
		else_if = {
			limit = { num_of_hunting_camp_building > 0 }
			remove_building_level = hunting_camp_building
		}
		else_if = {
			limit = { num_of_logging_camp_building > 0 }
			remove_building_level = logging_camp_building
		}		
		else_if = {
			limit = { num_of_noble_castle_building > 0 }
			remove_building_level = noble_castle_building
		}
		else_if = {
			limit = { num_of_monastery_settlement_building > 0 }
			remove_building_level = monastery_settlement_building
		}
		else_if = {
			limit = { num_of_fortress_building > 0 }
			remove_building_level = fortress_building
		}
	}
	else_if = {
		limit = { has_city_status = yes }
		if = {
			limit = { num_of_used_building_slots > 0 }
			custom_tooltip = destroy_building_effect.tt 
		}
		hidden_effect = {
			random_list = {
				99 = {
					trigger = { num_of_trade_district_building > 0 }
					remove_building_level = trade_district_building
				}
				99 = {
					trigger = { num_of_trade_district_building > 0 }
					remove_building_level = trade_district_building
				}
				99 = {
					trigger = { num_of_craftsmans_district_building > 0 }
					remove_building_level = craftsmans_district_building
				}
				99 = {
					trigger = { num_of_craftsmans_district_building > 0 }
					remove_building_level = craftsmans_district_building
				}
				99 = {
					trigger = { num_of_nobility_district_building > 0 }
					remove_building_level = nobility_district_building
				}
				99 = {
					trigger = { num_of_ironworks_building > 0 }
					remove_building_level = ironworks_building
				}
				99 = {
					trigger = { num_of_population_building > 0 }
					remove_building_level = population_building
				}
				99 = {
					trigger = { num_of_taverns_and_inns_building > 0 }
					remove_building_level = taverns_and_inns_building
				}
				99 = {
					trigger = { num_of_barracks_building > 0 }
					remove_building_level = barracks_building
				}
				99 = {
					trigger = { num_of_shipyard_building > 0 }
					remove_building_level = shipyard_building
				}
				99 = {
					trigger = { num_of_town_hall_building > 0 }
					remove_building_level = town_hall_building
				}
				99 = {
					trigger = { num_of_temple_building > 0 }
					remove_building_level = temple_building
				}
				99 = {
					trigger = { num_of_guilds_hall_building > 0 }
					remove_building_level = guilds_hall_building
				}
				99 = {
					trigger = { num_of_main_market_building > 0 }
					remove_building_level = main_market_building
				}
				99 = {
					trigger = { num_of_drilling_square_building > 0 }
					remove_building_level = drilling_square_building
				}
				99 = {
					trigger = { num_of_city_walls_building > 0 }
					remove_building_level = city_walls_building
				}
				99 = {
					trigger = { num_of_univeristy_building > 0 }
					remove_building_level = univeristy_building
				}
				99 = {
					trigger = { num_of_wizard_tower_building > 0 }
					remove_building_level = wizard_tower_building
				}
				99 = {
					trigger = { num_of_aristocratic_assembly_building > 0 }
					remove_building_level = aristocratic_assembly_building
				}				
				1 = {
					trigger = { num_of_fortress_building > 0 }
					remove_building_level = fortress_building
				}
			}
		}
	}
}

annexation_character_cleanup = { #Cleans variables, nothing else.
	if = { limit = { is_in_list = first_annex_family_list } remove_from_list = first_annex_family_list }
	if = { limit = { is_in_list = second_annex_family_list } remove_from_list = second_annex_family_list }
	if = { limit = { is_in_list = third_annex_family_list } remove_from_list = third_annex_family_list }
	if = { limit = { is_in_list = fourth_annex_family_list } remove_from_list = fourth_annex_family_list }
	if = { limit = { is_in_list = imprisonment_list } remove_from_list = imprisonment_list }
	if = { limit = { is_in_list = banishment_list } remove_from_list = banishment_list }
}

new_family_generation_effect = {
	#Used in family_events.1 and other places where the scope is a country and the effect is provided a saved scope which is a character.
	#$FAMILY_CANDIDATE$ is the saved scope that creates the family
	scope:$FAMILY_CANDIDATE$  = {
		ROOT = {
			create_family = PREV
			#hidden_effect = { set_home_country = ROOT }
		}
		custom_tooltip = family_acceptance_custom_tooltip
	}
	hidden_effect = {
		#To determine starting prestige we look at the least prestigious other family:
		ordered_family = {
			order_by = prestige
			limit  = { NOT = { THIS = scope:$FAMILY_CANDIDATE$.family } }
			position = end
			save_scope_as = poor_family
		}
		scope:$FAMILY_CANDIDATE$.family = {
			add_prestige = {
				value = scope:poor_family.prestige
				subtract = 50
				min = 200
			}
		}
		#Now to populate the new Family:
		if = { #Our ambitious young candidate needs a father
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age < 60
					NOT = { exists = father }
				}
			}
			create_character = {
				age = 75
				female = no
				save_scope_as = pater_familias
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
			}
			scope:pater_familias = {
				adopt = scope:$FAMILY_CANDIDATE$
			}
		}
		else = {
			scope:$FAMILY_CANDIDATE$ = { save_scope_as = pater_familias }
		}
		if = { #Does this character have children? If not let us make some.
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = no
					NOT = { any_child = { is_male = yes } }
				}
			}
			create_character = {
				age = 6
				female = no
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				father = scope:$FAMILY_CANDIDATE$
			}
		}
		if = { #Does this character have children? If not let us make some.
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = yes
					NOT = { any_child = { is_male = yes } }
				}
			}
			create_character = {
				age = 6
				female = no
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				mother = scope:$FAMILY_CANDIDATE$
			}
		}
		if = { #Does this character have children? If not let us make some.
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = no
					NOT = { any_child = { is_female = yes } }
				}
			}
			create_character = {
				age = 4
				female = yes
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				father = scope:$FAMILY_CANDIDATE$
			}
		}
		if = {
			limit = {
				scope:$FAMILY_CANDIDATE$ = {
					age > 16
					is_female = yes
					NOT = { any_child = { is_female = yes } }
				}
			}
			create_character = {
				age = 4
				female = yes
				family = scope:$FAMILY_CANDIDATE$.family
				religion = scope:$FAMILY_CANDIDATE$.religion
				culture = scope:$FAMILY_CANDIDATE$.culture
				mother = scope:$FAMILY_CANDIDATE$
			}
		}
		if = { #Any existing close relatives need to be joined to the family.
			limit = {
				any_character = {
					is_minor_character = yes
					is_close_relative = scope:$FAMILY_CANDIDATE$
				}
			}
			every_character = {
				limit = {
					is_minor_character = yes
					is_close_relative = scope:$FAMILY_CANDIDATE$
				}
				set_family = scope:$FAMILY_CANDIDATE$.family
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				if = {
					limit = { prisoner = yes }
					ROOT = { release_prisoner = { target = PREV } }
				}
				set_home_country = ROOT
			}
		}
		ordered_character = { #Clients are now added.
			check_range_bounds = no
			max = 7
			order_by = power_base
			limit = {
				prisoner = no
				is_mercenary = no
				NOT = { has_variable = olympic_attendee }
				is_minor_character = yes
				trigger_if = {
					limit = { exists = scope:family_candidate_1 }
					NOT = { THIS = scope:family_candidate_1 }
				}
				trigger_if = {
					limit = { exists = scope:family_candidate_2 }
					NOT = { THIS = scope:family_candidate_2 }
				}
				trigger_if = {
					limit = { exists = scope:family_candidate_3 }
					NOT = { THIS = scope:family_candidate_3 }
				}
				trigger_if = {
					limit = { exists = scope:family_candidate_4 }
					NOT = { THIS = scope:family_candidate_4 }
				}
				NOT = { age > scope:$FAMILY_CANDIDATE$.age } #Sorry, no seniors.
				is_ruler = no #Never the ruler.
			}
			set_family = scope:$FAMILY_CANDIDATE$.family
			adapt_family_name = yes
			set_home_country = ROOT
			add_character_modifier = {
				name = adopted_into_great_family
				duration = -1
			}
			if = {
				limit = { has_character_modifier = foreign_citizen }
				remove_character_modifier = foreign_citizen
			}
		}
		if = {
			limit = { scope:$FAMILY_CANDIDATE$.family = { num_of_members <= 8 } }
			while = {
				limit = { scope:$FAMILY_CANDIDATE$.family = { num_of_members <= 8 } }
				create_character = {
					family = scope:$FAMILY_CANDIDATE$.family
					religion = scope:$FAMILY_CANDIDATE$.religion
					culture = scope:$FAMILY_CANDIDATE$.culture
				}
			}
		}
	}
}

add_city_fire_effect = {
	hidden_effect = {
		add_vfx = {
			name = "city_fire"
			duration = 60
			locator = city
		}
	}
}

add_fort_fire_effect = {
	hidden_effect = {
		if = {
			limit = {
				fort_level >= 1
			}
			random_list = {
				50 = {
					add_vfx = {
						name = "fort_fire"
						duration = 30
						locator = fort
					}
				}
				50 = {
					add_vfx = {
						name = "fort_fire_2"
						duration = 30
						locator = fort
					}
				}
			}
		}
	}
}

add_port_fire_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_port = yes
			}
			random_list = {
				50 = {
					add_vfx = {
						name = "fort_fire"
						duration = 30
						locator = port
					}
				}
				50 = {
					add_vfx = {
						name = "fort_fire_2"
						duration = 30
						locator = port
					}
				}
			}
		}
	}
}

add_city_smoke_effect = {
	hidden_effect = {
		add_vfx = {
			name = "siege_smoke"
			duration = 30
			locator = city
		}
	}
}

flavor_egy_move_magids_effect = {
	if = {
		limit = { 
			root.consort = char:18
			scope:flavor_egy_2_magas_scope = char:46
			NOT = { root.consort.family = root.current_ruler.family }
		}
		root.consort = { save_scope_as = berenike_scope }
		save_scope_as = egy_scope
		if = {
			limit = {
				scope:berenike_scope.family = {
					any_family_member = {
						employer = root
						prisoner = no
						NOT = { this = scope:berenike_scope }
					}
				}
			}
			hidden_effect = {
				scope:berenike_scope.family = {
					every_family_member = {
						limit = {
							employer = root
							prisoner = no
							NOT = { this = scope:berenike_scope }
						}
						set_variable = moving_magid_flag
						remove_all_positions = yes
						move_country = scope:flavor_egy_2_magas_scope.employer
						set_home_country = scope:flavor_egy_2_magas_scope.employer
						remove_character_modifier = foreign_citizen
						set_family = scope:flavor_egy_2_magas_scope.family 
					}
				}
			}
			scope:flavor_egy_2_magas_scope.employer = {
				trigger_event = { id = flavor_egy.14 }
			}
			custom_tooltip = flavor_egy_magid_move_tt
		}
		scope:berenike_scope = { set_family = root.current_ruler.family }
	}
}

flavor_sel_1_claim_bactria_effect = {
	every_area_province = {
		limit = {
			NOT = { owner = c:BAC }
		}
		add_claim = c:BAC
	}
}

flavor_sel_1_claim_parthia_effect = {
	every_area_province = {
		limit = {
			NOT = { owner = c:PAR }
		}
		add_claim = c:PAR
	}
}

flavor_sel_4_claim_effect = {
	every_area_province = {
		limit = {
			owner = {
				tag = SEL
			}
		}
		set_conquered_by = c:MRY
	}
}

flavor_sel_6_claim_effect = {
	every_region_province = {
		add_claim = c:SEL
	}
}

roman_conquest_22_claim_effect = {
	every_region_province = {
		limit = {
			NOT = {
				owned_or_subject_owned = c:ROM
			}
			any_neighbor_province = {
				owned_or_subject_owned = c:ROM
			}
		}
		add_claim = c:ROM
		owner = { 
			add_opinion = { target = c:ROM modifier = rm_4_hispanian_dominance_enemy_opmod }
		}
	}
}

diadochi_flavor_1_region_claim_effect = {
	every_region_province = {
		limit = {
			exists = owner
			owner = {
				is_diadochi_trigger = yes
			}
			NOT = { 
				owned_or_subject_owned = ROOT
			}
		}
		add_claim = ROOT
	}
}

diadochi_flavor_event_claim_effect = {
	region:greece_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:thrace_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:macedonia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:syria_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:asia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:cilicia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:galatia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:assyria_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:persis_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:palestine_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:mesopotamia_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:lower_egypt_region = { diadochi_flavor_1_region_claim_effect = yes }
	region:upper_egypt_region = { diadochi_flavor_1_region_claim_effect = yes }
}

diadochi_flavor_lose_claim_effect = {
	every_region_province = {
		remove_claim = root
	}
}

fe_66_percent_food_var_effect = {
	set_variable = {
		name = fe_66_percent_food_var
		value = scope:fe_city.state.has_state_food
	}
	change_variable = {
		name = fe_66_percent_food_var
		divide = 3
		min = 100
	}
	change_variable = {
		name = fe_66_percent_food_var
		multiply = 2
	}
}

clear_loyalty_effect = {
	if = {
		limit = { has_loyalty = loyalty_office_gained }
		remove_loyalty = loyalty_office_gained
	}
	if = {
		limit = { has_loyalty = loyalty_office_lost }
		remove_loyalty = loyalty_office_lost
	}
	if = {
		limit = { has_loyalty = given_free_hands }
		remove_loyalty = given_free_hands
	}
	if = {
		limit = { has_loyalty = free_hands_revoked }
		remove_loyalty = free_hands_revoked
	}
	if = {
		limit = { has_loyalty = loyalty_inspire_disloyalty }
		remove_loyalty = loyalty_inspire_disloyalty
	}
	if = {
		limit = { has_loyalty = granted_holding_l }
		remove_loyalty = granted_holding_l
	}
	if = {
		limit = { has_loyalty = revoked_holding_l }
		remove_loyalty = revoked_holding_l
	}
	if = {
		limit = { has_loyalty = laurels_acknowledged_l }
		remove_loyalty = laurels_acknowledged_l
	}
	if = {
		limit = { has_loyalty = laurels_acknowledged_l }
		remove_loyalty = laurels_acknowledged_l
	}
	if = {
		limit = { has_loyalty = imprisoned_l }
		remove_loyalty = imprisoned_l
	}
	if = {
		limit = { has_loyalty = triumph_l }
		remove_loyalty = triumph_l
	}
	if = {
		limit = { has_loyalty = corruption_sanctions_l }
		remove_loyalty = corruption_sanctions_l
	}
	if = {
		limit = { has_loyalty = brought_to_trial_l }
		remove_loyalty = brought_to_trial_l
	}
	if = {
		limit = { has_loyalty = ci_bribe }
		remove_loyalty = ci_bribe
	}
	if = {
		limit = { has_loyalty = force_converted_religion }
		remove_loyalty = force_converted_religion
	}
	if = {
		limit = { has_loyalty = chief_exalted }
		remove_loyalty = chief_exalted
	}
	if = {
		limit = { has_loyalty = granted_citizenship }
		remove_loyalty = granted_citizenship
	}
	if = {
		limit = { has_loyalty = benevolent_overlord_tribal_chiefdom }
		remove_loyalty = benevolent_overlord_tribal_chiefdom
	}
	if = {
		limit = { has_loyalty = assets_seized_sl }
		remove_loyalty = assets_seized_sl
	}
	if = {
		limit = { has_loyalty = loyalty_hold_triumph }
		remove_loyalty = loyalty_hold_triumph
	}
	if = {
		limit = { has_loyalty = loyalty_banish_char }
		remove_loyalty = loyalty_banish_char
	}
	if = {
		limit = { has_loyalty = loyalty_execute_character }
		remove_loyalty = loyalty_execute_character
	}
	if = {
		limit = { has_loyalty = loyalty_imprison }
		remove_loyalty = loyalty_imprison
	}
	if = {
		limit = { has_loyalty = loyalty_appoint_dictator }
		remove_loyalty = loyalty_appoint_dictator
	}
	if = {
		limit = { has_loyalty = loyalty_ostracize_char }
		remove_loyalty = loyalty_ostracize_char
	}
}